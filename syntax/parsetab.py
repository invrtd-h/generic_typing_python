
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CLS_FN CLS_VAR COLON COMMA DOT EQ EXTENDS FALSE FN GENERATE ID IMPLIES LP1 LP2 LP3 NEQ NONE NOT OR PASS PRINTINFO PROGRAM_BEGIN PROGRAM_END RP1 RP2 RP3 R_ARROW STAR STATIC_FN S_COLON TRAIT TRAIT_OF TRUE VAR WS XOR program : PROGRAM_BEGIN S_COLON stmts PROGRAM_END S_COLON  program : WS  stmts : stmts stmt  stmts : stmt  stmt : trait_decl  stmt : print_stmt  stmt : generate_stmt  stmt : assign_stmt  stmt : S_COLON  trait_decl : TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON  trait_decl : TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON  trait_id : ID  class_args : main_arg COMMA sub_args  class_args : main_arg  main_arg : ID  sub_args : necessary_args COMMA optional_args sub_args : necessary_args  sub_args : optional_args  necessary_args : necessary_args COMMA necessary_arg  necessary_args : necessary_arg  necessary_arg : ID  optional_args : optional_args COMMA optional_arg  optional_args : optional_arg  optional_arg : ID ASSIGN unary_pred trait_decl_stmts : trait_decl_stmts trait_decl_stmt  trait_decl_stmts : trait_decl_stmt  trait_decl_stmts : PASS S_COLON  trait_decl_stmt : FN COLON LP2 decl_fn_stmts RP2 S_COLON  trait_decl_stmt : VAR COLON LP2 decl_stmts RP2 S_COLON  trait_decl_stmt : CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON  trait_decl_stmt : CLS_VAR COLON LP2 decl_stmts RP2 S_COLON  trait_decl_stmt : STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON  decl_fn_stmts : decl_fn_stmts decl_fn_stmt  decl_fn_stmts : decl_fn_stmt  decl_fn_stmt : fn_id LP1 pred_args RP1 S_COLON  decl_fn_stmt : fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON  decl_fn_stmt : fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON  decl_fn_stmt : fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON  decl_cls_fn_stmts : decl_cls_fn_stmts decl_cls_fn_stmt  decl_cls_fn_stmts : decl_cls_fn_stmt  decl_cls_fn_stmt : fn_id LP1 pred_args RP1 S_COLON  decl_cls_fn_stmt : fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON  decl_cls_fn_stmt : fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON  decl_cls_fn_stmt : fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON  fn_id : ID  pred_args : main_pred COMMA next_preds  pred_args : main_pred  main_pred : ID  next_preds : next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds  next_preds : next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR  next_preds : next_anonymous_necessary_preds COMMA next_anonymous_opt_preds next_preds : next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds  next_preds : next_anonymous_necessary_preds COMMA STAR  next_preds : next_anonymous_necessary_preds  next_preds : next_anonymous_opt_preds COMMA STAR COMMA next_named_preds  next_preds : next_anonymous_opt_preds COMMA STAR  next_preds : next_anonymous_opt_preds  next_preds : STAR COMMA next_named_preds  next_preds : STAR  next_anonymous_necessary_preds : next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred  next_anonymous_necessary_preds : next_anonymous_necessary_pred  next_anonymous_necessary_pred : unary_pred  next_anonymous_opt_preds : next_anonymous_opt_preds COMMA next_anonymous_opt_pred  next_anonymous_opt_preds : next_anonymous_opt_pred  next_anonymous_opt_pred : ASSIGN unary_pred  next_named_preds : next_named_preds COMMA next_named_pred  next_named_preds : next_named_pred  next_named_pred : next_named_necessary_pred  next_named_pred : next_named_opt_pred  next_named_necessary_pred : arg_name COLON unary_pred  next_named_opt_pred : arg_name COLON ASSIGN unary_pred  arg_name : ID  type_var_args : type_var_args COMMA type_var_arg  type_var_args : type_var_arg  type_var_arg : type_var_id  type_var_arg : type_var_id COLON unary_pred  type_var_id : ID  unary_pred : pred_name  unary_pred : unnamed_pred  unnamed_pred : pred_name LP3 args RP3  unnamed_pred : LP3 pred_expr RP3  unnamed_pred : TRAIT_OF LP1 var_expr RP1  unnamed_pred : NONE  pred_name : ID  pred_expr : pred_expr OR pred_expr_a  pred_expr : pred_expr_a  pred_expr_a : pred_expr_a AND pred_expr_b  pred_expr_a : pred_expr_b  pred_expr_b : NOT pred_expr_c  pred_expr_b : pred_expr_c  pred_expr_c : unary_pred  pred_expr_c : LP1 pred_expr RP1  var_expr : unary_pred DOT member_var_name  member_var_name : ID  decl_stmts : decl_stmts decl_stmt  decl_stmts : decl_stmt  decl_stmt : var_id S_COLON  decl_stmt : var_id COLON unary_pred S_COLON  decl_stmt : LP3 vars_id RP3 S_COLON  decl_stmt : LP3 vars_id RP3 COLON unary_pred S_COLON  vars_id : vars_id COMMA var_id  vars_id : var_id  var_id : ID  decl_static_fn_stmts : decl_static_fn_stmts decl_static_fn_stmt  decl_static_fn_stmts : decl_static_fn_stmt  decl_static_fn_stmt : static_fn_id LP1 next_preds RP1 S_COLON  decl_static_fn_stmt : static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON  decl_static_fn_stmt : static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON  decl_static_fn_stmt : static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON  decl_static_fn_stmt : static_fn_id LP1 RP1 S_COLON  decl_static_fn_stmt : static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON  decl_static_fn_stmt : static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON  decl_static_fn_stmt : static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON  static_fn_id : ID  print_stmt : PRINTINFO to_print S_COLON  generate_stmt : GENERATE to_print S_COLON  to_print : ID  to_print : boolean_expr  to_print : unnamed_pred  boolean_expr : boolean_expr OR boolean_expr_a  boolean_expr : boolean_expr_a  boolean_expr_a : boolean_expr_a XOR boolean_expr_b  boolean_expr_a : boolean_expr_b  boolean_expr_b : boolean_expr_b AND boolean_expr_c  boolean_expr_b : boolean_expr_c  boolean_expr_c : boolean_expr_c EQ boolean_expr_d  boolean_expr_c : boolean_expr_c NEQ boolean_expr_d  boolean_expr_c : boolean_expr_d  boolean_expr_d : NOT boolean_expr_e  boolean_expr_d : boolean_expr_e  boolean_expr_e : atomic_boolean_expr  boolean_expr_e : LP1 boolean_expr RP1  atomic_boolean_expr : constants  atomic_boolean_expr : unary_pred LP1 args RP1  atomic_boolean_expr : unary_pred IMPLIES unary_pred  atomic_boolean_expr : LP1 unary_pred EQ unary_pred RP1  atomic_boolean_expr : LP1 unary_pred NEQ unary_pred RP1  constants : TRUE  constants : FALSE  args : args COMMA arg  args : arg  arg : ID  assign_stmt : names ASSIGN assign_expr S_COLON  names : names COMMA name  names : name  name : ID  assign_expr : names ASSIGN assign_expr  assign_expr : names  trait_decl_stmt : error S_COLON  trait_decl_stmt : error LP2 error S_COLON RP2 S_COLON'
    
_lr_action_items = {'PROGRAM_BEGIN':([0,],[2,]),'WS':([0,],[3,]),'$end':([1,3,45,],[0,-2,-1,]),'S_COLON':([2,4,5,6,7,8,9,10,11,16,17,18,19,22,23,24,25,26,31,32,33,34,36,37,38,40,41,42,47,58,59,60,67,70,71,72,73,77,78,82,89,92,93,94,96,98,101,106,110,111,123,124,132,138,145,156,162,170,172,182,183,187,193,197,198,202,203,213,214,222,232,241,243,257,263,276,279,281,289,291,293,301,312,313,314,316,],[4,5,-9,5,-4,-5,-6,-7,-8,-145,-146,45,-3,47,-117,-118,-119,-121,-83,-123,-125,-128,-130,-131,-133,-138,-139,70,-115,-78,-79,-84,-129,-116,-148,98,-144,-120,-122,-81,-132,-124,-126,-127,-135,-143,-80,-82,-134,-147,-136,-137,147,153,156,-10,181,189,-103,203,204,212,216,219,220,231,-11,237,238,244,251,258,261,278,282,290,292,294,302,304,306,310,317,318,319,320,]),'TRAIT':([4,5,6,7,8,9,10,11,19,47,70,98,156,203,],[12,-9,12,-4,-5,-6,-7,-8,-3,-115,-116,-143,-10,-11,]),'PRINTINFO':([4,5,6,7,8,9,10,11,19,47,70,98,156,203,],[13,-9,13,-4,-5,-6,-7,-8,-3,-115,-116,-143,-10,-11,]),'GENERATE':([4,5,6,7,8,9,10,11,19,47,70,98,156,203,],[14,-9,14,-4,-5,-6,-7,-8,-3,-115,-116,-143,-10,-11,]),'ID':([4,5,6,7,8,9,10,11,12,13,14,19,28,30,35,43,44,46,47,48,49,50,54,57,61,64,65,66,68,69,70,83,84,90,91,97,98,100,102,107,113,127,128,129,156,157,158,159,160,161,164,165,168,169,171,173,174,176,177,178,184,185,186,188,189,190,194,195,196,199,200,201,203,215,229,233,235,236,237,238,239,244,245,246,248,251,252,254,258,259,260,261,262,275,278,282,284,285,286,287,290,292,294,300,302,303,304,305,306,307,308,310,311,317,318,319,320,],[17,-9,17,-4,-5,-6,-7,-8,21,23,23,-3,60,60,60,17,17,76,-115,60,60,81,60,60,60,60,60,60,81,60,-116,60,60,60,60,17,-143,119,81,122,60,119,143,60,-10,167,172,167,172,180,167,-34,172,-96,172,167,-40,172,180,-105,-33,207,211,-95,-97,60,-39,207,211,-104,60,211,-11,172,60,60,211,60,-98,-99,60,-110,60,60,274,-35,60,207,-41,60,207,-106,60,60,-100,-111,274,274,274,60,-36,-42,-107,60,-112,60,-37,60,-43,60,274,-108,60,-113,-38,-44,-109,]),'PROGRAM_END':([5,6,7,8,9,10,11,19,47,70,98,156,203,],[-9,18,-4,-5,-6,-7,-8,-3,-115,-116,-143,-10,-11,]),'LP3':([13,14,23,27,28,30,35,48,49,54,57,58,60,61,64,65,66,69,83,84,90,91,113,129,158,160,166,167,168,169,175,176,179,180,188,189,190,200,229,233,236,237,238,239,245,246,252,259,262,275,278,287,300,303,305,307,311,],[28,28,-84,50,28,28,28,28,28,28,28,50,-84,28,28,28,28,28,28,28,28,28,28,28,171,171,186,-45,171,-96,196,171,201,-114,-95,-97,28,28,28,28,28,-98,-99,28,28,28,28,28,28,28,-100,28,28,28,28,28,28,]),'TRAIT_OF':([13,14,28,30,35,48,49,54,57,61,64,65,66,69,83,84,90,91,113,129,190,200,229,233,236,239,245,246,252,259,262,275,287,300,303,305,307,311,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'NONE':([13,14,28,30,35,48,49,54,57,61,64,65,66,69,83,84,90,91,113,129,190,200,229,233,236,239,245,246,252,259,262,275,287,300,303,305,307,311,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'NOT':([13,14,28,30,48,49,57,64,65,66,83,84,],[35,35,54,35,35,35,54,35,35,35,54,54,]),'LP1':([13,14,20,21,23,25,27,28,29,30,31,35,39,48,49,54,57,58,59,60,63,64,65,66,82,83,84,101,106,166,167,175,179,180,234,242,250,],[30,30,46,-12,-84,-79,-78,57,61,30,-83,30,68,30,30,57,57,-78,-79,-84,68,30,30,30,-81,57,57,-80,-82,185,-45,195,200,-114,254,260,275,]),'TRUE':([13,14,30,35,48,49,64,65,66,],[40,40,40,40,40,40,40,40,40,]),'FALSE':([13,14,30,35,48,49,64,65,66,],[41,41,41,41,41,41,41,41,41,]),'ASSIGN':([15,16,17,71,73,119,143,200,233,246,247,275,283,287,],[43,-145,-146,97,-144,129,129,229,229,229,229,229,229,300,]),'COMMA':([15,16,17,31,58,59,60,71,73,75,76,79,80,81,82,95,101,106,115,116,117,118,119,120,140,141,142,144,172,191,192,206,207,208,209,210,211,218,223,224,225,226,227,228,230,240,249,255,256,264,265,266,267,268,269,270,271,272,295,296,297,298,299,309,315,],[44,-145,-146,-83,-78,-79,-84,44,-144,100,-15,102,-141,-142,-81,102,-80,-82,127,128,-20,-23,-21,-140,128,-19,-22,-24,-103,215,-102,233,-48,235,-74,-75,-77,235,-62,246,247,248,-61,-64,235,-101,-65,-73,-76,283,284,-60,285,-63,286,-67,-68,-69,308,286,286,-66,-70,-71,286,]),'IMPLIES':([23,25,27,31,39,58,59,60,63,82,101,106,],[-84,-79,-78,-83,69,-78,-79,-84,69,-81,-80,-82,]),'OR':([24,26,31,32,33,34,36,37,38,40,41,51,52,53,55,56,58,59,60,62,67,77,78,82,85,86,89,92,93,94,96,101,103,104,105,106,110,123,124,],[48,-121,-83,-123,-125,-128,-130,-131,-133,-138,-139,83,-86,-88,-90,-91,-78,-79,-84,48,-129,-120,-122,-81,-89,83,-132,-124,-126,-127,-135,-80,-85,-87,-92,-82,-134,-136,-137,]),'RP1':([26,31,32,33,34,36,37,38,40,41,52,53,55,56,58,59,60,62,67,74,75,76,77,78,80,81,82,85,86,87,89,92,93,94,95,96,101,103,104,105,106,108,109,110,114,115,116,117,118,119,120,121,122,123,124,140,141,142,144,200,205,206,207,217,221,223,224,225,226,227,228,249,253,264,265,266,267,268,269,270,271,272,275,277,280,288,295,296,297,298,299,309,315,],[-121,-83,-123,-125,-128,-130,-131,-133,-138,-139,-86,-88,-90,-91,-78,-79,-84,89,-129,99,-14,-15,-120,-122,-141,-142,-81,-89,105,106,-132,-124,-126,-127,110,-135,-80,-85,-87,-92,-82,123,124,-134,-13,-17,-18,-20,-23,-21,-140,-93,-94,-136,-137,-16,-19,-22,-24,222,232,-47,-48,241,243,-62,-54,-57,-59,-61,-64,-65,-46,-51,-53,-60,-56,-63,-58,-67,-68,-69,289,291,293,301,-50,-52,-55,-66,-70,-71,-49,]),'XOR':([26,31,32,33,34,36,37,38,40,41,58,59,60,67,77,78,82,89,92,93,94,96,101,106,110,123,124,],[49,-83,-123,-125,-128,-130,-131,-133,-138,-139,-78,-79,-84,-129,49,-122,-81,-132,-124,-126,-127,-135,-80,-82,-134,-136,-137,]),'AND':([31,32,33,34,36,37,38,40,41,52,53,55,56,58,59,60,67,78,82,85,89,92,93,94,96,101,103,104,105,106,110,123,124,],[-83,64,-125,-128,-130,-131,-133,-138,-139,84,-88,-90,-91,-78,-79,-84,-129,64,-81,-89,-132,-124,-126,-127,-135,-80,84,-87,-92,-82,-134,-136,-137,]),'RP3':([31,51,52,53,55,56,58,59,60,79,80,81,82,85,101,103,104,105,106,120,172,191,192,208,209,210,211,218,230,240,255,256,],[-83,82,-86,-88,-90,-91,-78,-79,-84,101,-141,-142,-81,-89,-80,-85,-87,-92,-82,-140,-103,214,-102,234,-74,-75,-77,242,250,-101,-73,-76,]),'EQ':([31,33,34,36,37,38,40,41,58,59,60,63,67,82,89,92,93,94,96,101,106,110,123,124,],[-83,65,-128,-130,-131,-133,-138,-139,-78,-79,-84,90,-129,-81,-132,65,-126,-127,-135,-80,-82,-134,-136,-137,]),'NEQ':([31,33,34,36,37,38,40,41,58,59,60,63,67,82,89,92,93,94,96,101,106,110,123,124,],[-83,66,-128,-130,-131,-133,-138,-139,-78,-79,-84,91,-129,-81,-132,66,-126,-127,-135,-80,-82,-134,-136,-137,]),'DOT':([31,58,59,60,82,88,101,106,],[-83,-78,-79,-84,-81,107,-80,-82,]),'COLON':([31,58,59,60,82,99,101,106,126,133,134,135,136,137,170,172,210,211,214,273,274,],[-83,-78,-79,-84,-81,112,-80,-82,139,148,149,150,151,152,190,-103,236,-77,239,287,-72,]),'EXTENDS':([99,],[113,]),'LP2':([112,138,139,148,149,150,151,152,],[125,154,155,157,158,159,160,161,]),'PASS':([125,155,],[132,132,]),'FN':([125,130,131,146,147,153,155,163,204,212,216,219,220,231,],[133,133,-26,-25,-27,-149,133,133,-28,-29,-30,-31,-32,-150,]),'VAR':([125,130,131,146,147,153,155,163,204,212,216,219,220,231,],[134,134,-26,-25,-27,-149,134,134,-28,-29,-30,-31,-32,-150,]),'CLS_FN':([125,130,131,146,147,153,155,163,204,212,216,219,220,231,],[135,135,-26,-25,-27,-149,135,135,-28,-29,-30,-31,-32,-150,]),'CLS_VAR':([125,130,131,146,147,153,155,163,204,212,216,219,220,231,],[136,136,-26,-25,-27,-149,136,136,-28,-29,-30,-31,-32,-150,]),'STATIC_FN':([125,130,131,146,147,153,155,163,204,212,216,219,220,231,],[137,137,-26,-25,-27,-149,137,137,-28,-29,-30,-31,-32,-150,]),'error':([125,130,131,146,147,153,154,155,163,204,212,216,219,220,231,],[138,138,-26,-25,-27,-149,162,138,138,-28,-29,-30,-31,-32,-150,]),'RP2':([130,131,146,147,153,163,164,165,168,169,173,174,176,177,178,181,184,188,189,194,199,204,212,216,219,220,231,237,238,244,251,258,261,278,282,290,292,294,302,304,306,310,317,318,319,320,],[145,-26,-25,-27,-149,182,183,-34,187,-96,193,-40,197,198,-105,202,-33,-95,-97,-39,-104,-28,-29,-30,-31,-32,-150,-98,-99,-110,-35,-41,-106,-100,-111,-36,-42,-107,-112,-37,-43,-108,-113,-38,-44,-109,]),'STAR':([200,233,246,247,275,283,],[226,226,265,267,226,295,]),'R_ARROW':([222,232,241,243,289,291,293,301,],[245,252,259,262,303,305,307,311,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmts':([4,],[6,]),'stmt':([4,6,],[7,19,]),'trait_decl':([4,6,],[8,8,]),'print_stmt':([4,6,],[9,9,]),'generate_stmt':([4,6,],[10,10,]),'assign_stmt':([4,6,],[11,11,]),'names':([4,6,43,97,],[15,15,71,71,]),'name':([4,6,43,44,97,],[16,16,16,73,16,]),'trait_id':([12,],[20,]),'to_print':([13,14,],[22,42,]),'boolean_expr':([13,14,30,],[24,24,62,]),'unnamed_pred':([13,14,28,30,35,48,49,54,57,61,64,65,66,69,83,84,90,91,113,129,190,200,229,233,236,239,245,246,252,259,262,275,287,300,303,305,307,311,],[25,25,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'boolean_expr_a':([13,14,30,48,],[26,26,26,77,]),'pred_name':([13,14,28,30,35,48,49,54,57,61,64,65,66,69,83,84,90,91,113,129,190,200,229,233,236,239,245,246,252,259,262,275,287,300,303,305,307,311,],[27,27,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'boolean_expr_b':([13,14,30,48,49,],[32,32,32,32,78,]),'boolean_expr_c':([13,14,30,48,49,64,],[33,33,33,33,33,92,]),'boolean_expr_d':([13,14,30,48,49,64,65,66,],[34,34,34,34,34,34,93,94,]),'boolean_expr_e':([13,14,30,35,48,49,64,65,66,],[36,36,36,67,36,36,36,36,36,]),'atomic_boolean_expr':([13,14,30,35,48,49,64,65,66,],[37,37,37,37,37,37,37,37,37,]),'constants':([13,14,30,35,48,49,64,65,66,],[38,38,38,38,38,38,38,38,38,]),'unary_pred':([13,14,28,30,35,48,49,54,57,61,64,65,66,69,83,84,90,91,113,129,190,200,229,233,236,239,245,246,252,259,262,275,287,300,303,305,307,311,],[39,39,56,63,39,39,39,56,56,88,39,39,39,96,56,56,108,109,126,144,213,223,249,223,256,257,263,223,276,279,281,223,299,309,312,313,314,316,]),'pred_expr':([28,57,],[51,86,]),'pred_expr_a':([28,57,83,],[52,52,103,]),'pred_expr_b':([28,57,83,84,],[53,53,53,104,]),'pred_expr_c':([28,54,57,83,84,],[55,85,55,55,55,]),'assign_expr':([43,97,],[72,111,]),'class_args':([46,],[74,]),'main_arg':([46,],[75,]),'args':([50,68,],[79,95,]),'arg':([50,68,102,],[80,80,120,]),'var_expr':([61,],[87,]),'sub_args':([100,],[114,]),'necessary_args':([100,],[115,]),'optional_args':([100,127,],[116,140,]),'necessary_arg':([100,127,],[117,141,]),'optional_arg':([100,127,128,],[118,118,142,]),'member_var_name':([107,],[121,]),'trait_decl_stmts':([125,155,],[130,163,]),'trait_decl_stmt':([125,130,155,163,],[131,146,131,146,]),'decl_fn_stmts':([157,],[164,]),'decl_fn_stmt':([157,164,],[165,184,]),'fn_id':([157,159,164,173,],[166,175,166,175,]),'decl_stmts':([158,160,],[168,176,]),'decl_stmt':([158,160,168,176,],[169,169,188,188,]),'var_id':([158,160,168,171,176,215,],[170,170,170,192,170,240,]),'decl_cls_fn_stmts':([159,],[173,]),'decl_cls_fn_stmt':([159,173,],[174,194,]),'decl_static_fn_stmts':([161,],[177,]),'decl_static_fn_stmt':([161,177,],[178,199,]),'static_fn_id':([161,177,],[179,179,]),'vars_id':([171,],[191,]),'pred_args':([185,195,254,260,],[205,217,277,280,]),'main_pred':([185,195,254,260,],[206,206,206,206,]),'type_var_args':([186,196,201,],[208,218,230,]),'type_var_arg':([186,196,201,235,],[209,209,209,255,]),'type_var_id':([186,196,201,235,],[210,210,210,210,]),'next_preds':([200,233,275,],[221,253,288,]),'next_anonymous_necessary_preds':([200,233,275,],[224,224,224,]),'next_anonymous_opt_preds':([200,233,246,275,],[225,225,264,225,]),'next_anonymous_necessary_pred':([200,233,246,275,],[227,227,266,227,]),'next_anonymous_opt_pred':([200,233,246,247,275,283,],[228,228,228,268,228,268,]),'next_named_preds':([248,284,285,308,],[269,296,297,315,]),'next_named_pred':([248,284,285,286,308,],[270,270,270,298,270,]),'next_named_necessary_pred':([248,284,285,286,308,],[271,271,271,271,271,]),'next_named_opt_pred':([248,284,285,286,308,],[272,272,272,272,272,]),'arg_name':([248,284,285,286,308,],[273,273,273,273,273,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM_BEGIN S_COLON stmts PROGRAM_END S_COLON','program',5,'p_program_r0','syntax.py',164),
  ('program -> WS','program',1,'p_program_r1','syntax.py',169),
  ('stmts -> stmts stmt','stmts',2,'p_stmts_r0','syntax.py',174),
  ('stmts -> stmt','stmts',1,'p_stmts_r1','syntax.py',179),
  ('stmt -> trait_decl','stmt',1,'p_stmt_r0','syntax.py',184),
  ('stmt -> print_stmt','stmt',1,'p_stmt_r1','syntax.py',189),
  ('stmt -> generate_stmt','stmt',1,'p_stmt_r2','syntax.py',194),
  ('stmt -> assign_stmt','stmt',1,'p_stmt_r3','syntax.py',199),
  ('stmt -> S_COLON','stmt',1,'p_stmt_r4','syntax.py',204),
  ('trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON','trait_decl',10,'p_trait_decl_r0','syntax.py',209),
  ('trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON','trait_decl',12,'p_trait_decl_r1','syntax.py',214),
  ('trait_id -> ID','trait_id',1,'p_trait_id_r0','syntax.py',219),
  ('class_args -> main_arg COMMA sub_args','class_args',3,'p_class_args_r0','syntax.py',224),
  ('class_args -> main_arg','class_args',1,'p_class_args_r1','syntax.py',229),
  ('main_arg -> ID','main_arg',1,'p_main_arg_r0','syntax.py',234),
  ('sub_args -> necessary_args COMMA optional_args','sub_args',3,'p_sub_args_r0','syntax.py',239),
  ('sub_args -> necessary_args','sub_args',1,'p_sub_args_r1','syntax.py',244),
  ('sub_args -> optional_args','sub_args',1,'p_sub_args_r2','syntax.py',249),
  ('necessary_args -> necessary_args COMMA necessary_arg','necessary_args',3,'p_necessary_args_r0','syntax.py',254),
  ('necessary_args -> necessary_arg','necessary_args',1,'p_necessary_args_r1','syntax.py',259),
  ('necessary_arg -> ID','necessary_arg',1,'p_necessary_arg_r0','syntax.py',264),
  ('optional_args -> optional_args COMMA optional_arg','optional_args',3,'p_optional_args_r0','syntax.py',269),
  ('optional_args -> optional_arg','optional_args',1,'p_optional_args_r1','syntax.py',274),
  ('optional_arg -> ID ASSIGN unary_pred','optional_arg',3,'p_optional_arg_r0','syntax.py',279),
  ('trait_decl_stmts -> trait_decl_stmts trait_decl_stmt','trait_decl_stmts',2,'p_trait_decl_stmts_r0','syntax.py',284),
  ('trait_decl_stmts -> trait_decl_stmt','trait_decl_stmts',1,'p_trait_decl_stmts_r1','syntax.py',289),
  ('trait_decl_stmts -> PASS S_COLON','trait_decl_stmts',2,'p_trait_decl_stmts_r2','syntax.py',294),
  ('trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON','trait_decl_stmt',6,'p_trait_decl_stmt_r0','syntax.py',299),
  ('trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON','trait_decl_stmt',6,'p_trait_decl_stmt_r1','syntax.py',304),
  ('trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON','trait_decl_stmt',6,'p_trait_decl_stmt_r2','syntax.py',309),
  ('trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON','trait_decl_stmt',6,'p_trait_decl_stmt_r3','syntax.py',314),
  ('trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON','trait_decl_stmt',6,'p_trait_decl_stmt_r4','syntax.py',319),
  ('decl_fn_stmts -> decl_fn_stmts decl_fn_stmt','decl_fn_stmts',2,'p_decl_fn_stmts_r0','syntax.py',324),
  ('decl_fn_stmts -> decl_fn_stmt','decl_fn_stmts',1,'p_decl_fn_stmts_r1','syntax.py',329),
  ('decl_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON','decl_fn_stmt',5,'p_decl_fn_stmt_r0','syntax.py',334),
  ('decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON','decl_fn_stmt',7,'p_decl_fn_stmt_r1','syntax.py',339),
  ('decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON','decl_fn_stmt',8,'p_decl_fn_stmt_r2','syntax.py',344),
  ('decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON','decl_fn_stmt',10,'p_decl_fn_stmt_r3','syntax.py',349),
  ('decl_cls_fn_stmts -> decl_cls_fn_stmts decl_cls_fn_stmt','decl_cls_fn_stmts',2,'p_decl_cls_fn_stmts_r0','syntax.py',354),
  ('decl_cls_fn_stmts -> decl_cls_fn_stmt','decl_cls_fn_stmts',1,'p_decl_cls_fn_stmts_r1','syntax.py',359),
  ('decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON','decl_cls_fn_stmt',5,'p_decl_cls_fn_stmt_r0','syntax.py',364),
  ('decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON','decl_cls_fn_stmt',7,'p_decl_cls_fn_stmt_r1','syntax.py',369),
  ('decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON','decl_cls_fn_stmt',8,'p_decl_cls_fn_stmt_r2','syntax.py',374),
  ('decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON','decl_cls_fn_stmt',10,'p_decl_cls_fn_stmt_r3','syntax.py',379),
  ('fn_id -> ID','fn_id',1,'p_fn_id_r0','syntax.py',384),
  ('pred_args -> main_pred COMMA next_preds','pred_args',3,'p_pred_args_r0','syntax.py',389),
  ('pred_args -> main_pred','pred_args',1,'p_pred_args_r1','syntax.py',394),
  ('main_pred -> ID','main_pred',1,'p_main_pred_r0','syntax.py',399),
  ('next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds','next_preds',7,'p_next_preds_r0','syntax.py',404),
  ('next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR','next_preds',5,'p_next_preds_r1','syntax.py',409),
  ('next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds','next_preds',3,'p_next_preds_r2','syntax.py',414),
  ('next_preds -> next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds','next_preds',5,'p_next_preds_r3','syntax.py',419),
  ('next_preds -> next_anonymous_necessary_preds COMMA STAR','next_preds',3,'p_next_preds_r4','syntax.py',424),
  ('next_preds -> next_anonymous_necessary_preds','next_preds',1,'p_next_preds_r5','syntax.py',429),
  ('next_preds -> next_anonymous_opt_preds COMMA STAR COMMA next_named_preds','next_preds',5,'p_next_preds_r6','syntax.py',434),
  ('next_preds -> next_anonymous_opt_preds COMMA STAR','next_preds',3,'p_next_preds_r7','syntax.py',439),
  ('next_preds -> next_anonymous_opt_preds','next_preds',1,'p_next_preds_r8','syntax.py',444),
  ('next_preds -> STAR COMMA next_named_preds','next_preds',3,'p_next_preds_r9','syntax.py',449),
  ('next_preds -> STAR','next_preds',1,'p_next_preds_r10','syntax.py',454),
  ('next_anonymous_necessary_preds -> next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred','next_anonymous_necessary_preds',3,'p_next_anonymous_necessary_preds_r0','syntax.py',459),
  ('next_anonymous_necessary_preds -> next_anonymous_necessary_pred','next_anonymous_necessary_preds',1,'p_next_anonymous_necessary_preds_r1','syntax.py',464),
  ('next_anonymous_necessary_pred -> unary_pred','next_anonymous_necessary_pred',1,'p_next_anonymous_necessary_pred_r0','syntax.py',469),
  ('next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA next_anonymous_opt_pred','next_anonymous_opt_preds',3,'p_next_anonymous_opt_preds_r0','syntax.py',474),
  ('next_anonymous_opt_preds -> next_anonymous_opt_pred','next_anonymous_opt_preds',1,'p_next_anonymous_opt_preds_r1','syntax.py',479),
  ('next_anonymous_opt_pred -> ASSIGN unary_pred','next_anonymous_opt_pred',2,'p_next_anonymous_opt_pred_r0','syntax.py',484),
  ('next_named_preds -> next_named_preds COMMA next_named_pred','next_named_preds',3,'p_next_named_preds_r0','syntax.py',489),
  ('next_named_preds -> next_named_pred','next_named_preds',1,'p_next_named_preds_r1','syntax.py',494),
  ('next_named_pred -> next_named_necessary_pred','next_named_pred',1,'p_next_named_pred_r0','syntax.py',499),
  ('next_named_pred -> next_named_opt_pred','next_named_pred',1,'p_next_named_pred_r1','syntax.py',504),
  ('next_named_necessary_pred -> arg_name COLON unary_pred','next_named_necessary_pred',3,'p_next_named_necessary_pred_r0','syntax.py',509),
  ('next_named_opt_pred -> arg_name COLON ASSIGN unary_pred','next_named_opt_pred',4,'p_next_named_opt_pred_r0','syntax.py',514),
  ('arg_name -> ID','arg_name',1,'p_arg_name_r0','syntax.py',519),
  ('type_var_args -> type_var_args COMMA type_var_arg','type_var_args',3,'p_type_var_args_r0','syntax.py',524),
  ('type_var_args -> type_var_arg','type_var_args',1,'p_type_var_args_r1','syntax.py',529),
  ('type_var_arg -> type_var_id','type_var_arg',1,'p_type_var_arg_r0','syntax.py',534),
  ('type_var_arg -> type_var_id COLON unary_pred','type_var_arg',3,'p_type_var_arg_r1','syntax.py',539),
  ('type_var_id -> ID','type_var_id',1,'p_type_var_id_r0','syntax.py',544),
  ('unary_pred -> pred_name','unary_pred',1,'p_unary_pred_r0','syntax.py',549),
  ('unary_pred -> unnamed_pred','unary_pred',1,'p_unary_pred_r1','syntax.py',554),
  ('unnamed_pred -> pred_name LP3 args RP3','unnamed_pred',4,'p_unnamed_pred_r0','syntax.py',559),
  ('unnamed_pred -> LP3 pred_expr RP3','unnamed_pred',3,'p_unnamed_pred_r1','syntax.py',564),
  ('unnamed_pred -> TRAIT_OF LP1 var_expr RP1','unnamed_pred',4,'p_unnamed_pred_r2','syntax.py',569),
  ('unnamed_pred -> NONE','unnamed_pred',1,'p_unnamed_pred_r3','syntax.py',574),
  ('pred_name -> ID','pred_name',1,'p_pred_name_r0','syntax.py',579),
  ('pred_expr -> pred_expr OR pred_expr_a','pred_expr',3,'p_pred_expr_r0','syntax.py',584),
  ('pred_expr -> pred_expr_a','pred_expr',1,'p_pred_expr_r1','syntax.py',589),
  ('pred_expr_a -> pred_expr_a AND pred_expr_b','pred_expr_a',3,'p_pred_expr_a_r0','syntax.py',594),
  ('pred_expr_a -> pred_expr_b','pred_expr_a',1,'p_pred_expr_a_r1','syntax.py',599),
  ('pred_expr_b -> NOT pred_expr_c','pred_expr_b',2,'p_pred_expr_b_r0','syntax.py',604),
  ('pred_expr_b -> pred_expr_c','pred_expr_b',1,'p_pred_expr_b_r1','syntax.py',609),
  ('pred_expr_c -> unary_pred','pred_expr_c',1,'p_pred_expr_c_r0','syntax.py',614),
  ('pred_expr_c -> LP1 pred_expr RP1','pred_expr_c',3,'p_pred_expr_c_r1','syntax.py',619),
  ('var_expr -> unary_pred DOT member_var_name','var_expr',3,'p_var_expr_r0','syntax.py',624),
  ('member_var_name -> ID','member_var_name',1,'p_member_var_name_r0','syntax.py',629),
  ('decl_stmts -> decl_stmts decl_stmt','decl_stmts',2,'p_decl_stmts_r0','syntax.py',634),
  ('decl_stmts -> decl_stmt','decl_stmts',1,'p_decl_stmts_r1','syntax.py',639),
  ('decl_stmt -> var_id S_COLON','decl_stmt',2,'p_decl_stmt_r0','syntax.py',644),
  ('decl_stmt -> var_id COLON unary_pred S_COLON','decl_stmt',4,'p_decl_stmt_r1','syntax.py',649),
  ('decl_stmt -> LP3 vars_id RP3 S_COLON','decl_stmt',4,'p_decl_stmt_r2','syntax.py',654),
  ('decl_stmt -> LP3 vars_id RP3 COLON unary_pred S_COLON','decl_stmt',6,'p_decl_stmt_r3','syntax.py',659),
  ('vars_id -> vars_id COMMA var_id','vars_id',3,'p_vars_id_r0','syntax.py',664),
  ('vars_id -> var_id','vars_id',1,'p_vars_id_r1','syntax.py',669),
  ('var_id -> ID','var_id',1,'p_var_id_r0','syntax.py',674),
  ('decl_static_fn_stmts -> decl_static_fn_stmts decl_static_fn_stmt','decl_static_fn_stmts',2,'p_decl_static_fn_stmts_r0','syntax.py',679),
  ('decl_static_fn_stmts -> decl_static_fn_stmt','decl_static_fn_stmts',1,'p_decl_static_fn_stmts_r1','syntax.py',684),
  ('decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 S_COLON','decl_static_fn_stmt',5,'p_decl_static_fn_stmt_r0','syntax.py',689),
  ('decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON','decl_static_fn_stmt',7,'p_decl_static_fn_stmt_r1','syntax.py',694),
  ('decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON','decl_static_fn_stmt',8,'p_decl_static_fn_stmt_r2','syntax.py',699),
  ('decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON','decl_static_fn_stmt',10,'p_decl_static_fn_stmt_r3','syntax.py',704),
  ('decl_static_fn_stmt -> static_fn_id LP1 RP1 S_COLON','decl_static_fn_stmt',4,'p_decl_static_fn_stmt_r4','syntax.py',709),
  ('decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON','decl_static_fn_stmt',6,'p_decl_static_fn_stmt_r5','syntax.py',714),
  ('decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON','decl_static_fn_stmt',7,'p_decl_static_fn_stmt_r6','syntax.py',719),
  ('decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON','decl_static_fn_stmt',9,'p_decl_static_fn_stmt_r7','syntax.py',724),
  ('static_fn_id -> ID','static_fn_id',1,'p_static_fn_id_r0','syntax.py',729),
  ('print_stmt -> PRINTINFO to_print S_COLON','print_stmt',3,'p_print_stmt_r0','syntax.py',734),
  ('generate_stmt -> GENERATE to_print S_COLON','generate_stmt',3,'p_generate_stmt_r0','syntax.py',739),
  ('to_print -> ID','to_print',1,'p_to_print_r0','syntax.py',744),
  ('to_print -> boolean_expr','to_print',1,'p_to_print_r1','syntax.py',749),
  ('to_print -> unnamed_pred','to_print',1,'p_to_print_r2','syntax.py',754),
  ('boolean_expr -> boolean_expr OR boolean_expr_a','boolean_expr',3,'p_boolean_expr_r0','syntax.py',759),
  ('boolean_expr -> boolean_expr_a','boolean_expr',1,'p_boolean_expr_r1','syntax.py',764),
  ('boolean_expr_a -> boolean_expr_a XOR boolean_expr_b','boolean_expr_a',3,'p_boolean_expr_a_r0','syntax.py',769),
  ('boolean_expr_a -> boolean_expr_b','boolean_expr_a',1,'p_boolean_expr_a_r1','syntax.py',774),
  ('boolean_expr_b -> boolean_expr_b AND boolean_expr_c','boolean_expr_b',3,'p_boolean_expr_b_r0','syntax.py',779),
  ('boolean_expr_b -> boolean_expr_c','boolean_expr_b',1,'p_boolean_expr_b_r1','syntax.py',784),
  ('boolean_expr_c -> boolean_expr_c EQ boolean_expr_d','boolean_expr_c',3,'p_boolean_expr_c_r0','syntax.py',789),
  ('boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d','boolean_expr_c',3,'p_boolean_expr_c_r1','syntax.py',794),
  ('boolean_expr_c -> boolean_expr_d','boolean_expr_c',1,'p_boolean_expr_c_r2','syntax.py',799),
  ('boolean_expr_d -> NOT boolean_expr_e','boolean_expr_d',2,'p_boolean_expr_d_r0','syntax.py',804),
  ('boolean_expr_d -> boolean_expr_e','boolean_expr_d',1,'p_boolean_expr_d_r1','syntax.py',809),
  ('boolean_expr_e -> atomic_boolean_expr','boolean_expr_e',1,'p_boolean_expr_e_r0','syntax.py',814),
  ('boolean_expr_e -> LP1 boolean_expr RP1','boolean_expr_e',3,'p_boolean_expr_e_r1','syntax.py',819),
  ('atomic_boolean_expr -> constants','atomic_boolean_expr',1,'p_atomic_boolean_expr_r0','syntax.py',824),
  ('atomic_boolean_expr -> unary_pred LP1 args RP1','atomic_boolean_expr',4,'p_atomic_boolean_expr_r1','syntax.py',829),
  ('atomic_boolean_expr -> unary_pred IMPLIES unary_pred','atomic_boolean_expr',3,'p_atomic_boolean_expr_r2','syntax.py',834),
  ('atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1','atomic_boolean_expr',5,'p_atomic_boolean_expr_r3','syntax.py',839),
  ('atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1','atomic_boolean_expr',5,'p_atomic_boolean_expr_r4','syntax.py',844),
  ('constants -> TRUE','constants',1,'p_constants_r0','syntax.py',849),
  ('constants -> FALSE','constants',1,'p_constants_r1','syntax.py',854),
  ('args -> args COMMA arg','args',3,'p_args_r0','syntax.py',859),
  ('args -> arg','args',1,'p_args_r1','syntax.py',864),
  ('arg -> ID','arg',1,'p_arg_r0','syntax.py',869),
  ('assign_stmt -> names ASSIGN assign_expr S_COLON','assign_stmt',4,'p_assign_stmt_r0','syntax.py',874),
  ('names -> names COMMA name','names',3,'p_names_r0','syntax.py',879),
  ('names -> name','names',1,'p_names_r1','syntax.py',884),
  ('name -> ID','name',1,'p_name_r0','syntax.py',889),
  ('assign_expr -> names ASSIGN assign_expr','assign_expr',3,'p_assign_expr_r0','syntax.py',894),
  ('assign_expr -> names','assign_expr',1,'p_assign_expr_r1','syntax.py',899),
  ('trait_decl_stmt -> error S_COLON','trait_decl_stmt',2,'p_trait_decl_stmt_err0','syntax.py',904),
  ('trait_decl_stmt -> error LP2 error S_COLON RP2 S_COLON','trait_decl_stmt',6,'p_trait_decl_stmt_err1','syntax.py',909),
]
