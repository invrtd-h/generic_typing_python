Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM_BEGIN S_COLON stmts PROGRAM_END S_COLON
Rule 2     program -> WS
Rule 3     stmts -> stmts stmt
Rule 4     stmts -> stmt
Rule 5     stmt -> trait_decl
Rule 6     stmt -> print_stmt
Rule 7     stmt -> generate_stmt
Rule 8     stmt -> assign_stmt
Rule 9     stmt -> S_COLON
Rule 10    trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
Rule 11    trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON
Rule 12    trait_id -> ID
Rule 13    class_args -> main_arg COMMA sub_args
Rule 14    class_args -> main_arg
Rule 15    main_arg -> ID
Rule 16    sub_args -> necessary_args COMMA optional_args
Rule 17    sub_args -> necessary_args
Rule 18    sub_args -> optional_args
Rule 19    necessary_args -> necessary_args COMMA necessary_arg
Rule 20    necessary_args -> necessary_arg
Rule 21    necessary_arg -> ID
Rule 22    optional_args -> optional_args COMMA optional_arg
Rule 23    optional_args -> optional_arg
Rule 24    optional_arg -> ID ASSIGN unary_pred
Rule 25    trait_decl_stmts -> trait_decl_stmts trait_decl_stmt
Rule 26    trait_decl_stmts -> trait_decl_stmt
Rule 27    trait_decl_stmts -> PASS S_COLON
Rule 28    trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON
Rule 29    trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON
Rule 30    trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON
Rule 31    trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON
Rule 32    trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON
Rule 33    trait_decl_stmt -> error S_COLON
Rule 34    decl_fn_stmts -> decl_fn_stmts decl_fn_stmt
Rule 35    decl_fn_stmts -> decl_fn_stmt
Rule 36    decl_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON
Rule 37    decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON
Rule 38    decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
Rule 39    decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
Rule 40    decl_cls_fn_stmts -> decl_cls_fn_stmts decl_cls_fn_stmt
Rule 41    decl_cls_fn_stmts -> decl_cls_fn_stmt
Rule 42    decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON
Rule 43    decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON
Rule 44    decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
Rule 45    decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
Rule 46    fn_id -> ID
Rule 47    pred_args -> main_pred COMMA next_preds
Rule 48    pred_args -> main_pred
Rule 49    main_pred -> ID
Rule 50    next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
Rule 51    next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR
Rule 52    next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds
Rule 53    next_preds -> next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds
Rule 54    next_preds -> next_anonymous_necessary_preds COMMA STAR
Rule 55    next_preds -> next_anonymous_necessary_preds
Rule 56    next_preds -> next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
Rule 57    next_preds -> next_anonymous_opt_preds COMMA STAR
Rule 58    next_preds -> next_anonymous_opt_preds
Rule 59    next_preds -> STAR COMMA next_named_preds
Rule 60    next_preds -> STAR
Rule 61    next_anonymous_necessary_preds -> next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred
Rule 62    next_anonymous_necessary_preds -> next_anonymous_necessary_pred
Rule 63    next_anonymous_necessary_pred -> unary_pred
Rule 64    next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA next_anonymous_opt_pred
Rule 65    next_anonymous_opt_preds -> next_anonymous_opt_pred
Rule 66    next_anonymous_opt_pred -> ASSIGN unary_pred
Rule 67    next_named_preds -> next_named_preds COMMA next_named_pred
Rule 68    next_named_preds -> next_named_pred
Rule 69    next_named_pred -> next_named_necessary_pred
Rule 70    next_named_pred -> next_named_opt_pred
Rule 71    next_named_necessary_pred -> arg_name COLON unary_pred
Rule 72    next_named_opt_pred -> arg_name COLON ASSIGN unary_pred
Rule 73    arg_name -> ID
Rule 74    type_var_args -> type_var_args COMMA type_var_arg
Rule 75    type_var_args -> type_var_arg
Rule 76    type_var_arg -> type_var_id
Rule 77    type_var_arg -> type_var_id COLON unary_pred
Rule 78    type_var_id -> ID
Rule 79    unary_pred -> pred_name
Rule 80    unary_pred -> unnamed_pred
Rule 81    unnamed_pred -> pred_name LP3 args RP3
Rule 82    unnamed_pred -> LP3 pred_expr RP3
Rule 83    unnamed_pred -> TRAIT_OF LP1 var_expr RP1
Rule 84    unnamed_pred -> NONE
Rule 85    pred_name -> ID
Rule 86    pred_expr -> pred_expr OR pred_expr_a
Rule 87    pred_expr -> pred_expr_a
Rule 88    pred_expr_a -> pred_expr_a AND pred_expr_b
Rule 89    pred_expr_a -> pred_expr_b
Rule 90    pred_expr_b -> NOT pred_expr_c
Rule 91    pred_expr_b -> pred_expr_c
Rule 92    pred_expr_c -> unary_pred
Rule 93    pred_expr_c -> LP1 pred_expr RP1
Rule 94    var_expr -> unary_pred DOT member_var_name
Rule 95    member_var_name -> ID
Rule 96    decl_stmts -> decl_stmts decl_stmt
Rule 97    decl_stmts -> decl_stmt
Rule 98    decl_stmt -> var_id S_COLON
Rule 99    decl_stmt -> var_id COLON unary_pred S_COLON
Rule 100   decl_stmt -> LP3 vars_id RP3 S_COLON
Rule 101   decl_stmt -> LP3 vars_id RP3 COLON unary_pred S_COLON
Rule 102   vars_id -> vars_id COMMA var_id
Rule 103   vars_id -> var_id
Rule 104   var_id -> ID
Rule 105   decl_static_fn_stmts -> decl_static_fn_stmts decl_static_fn_stmt
Rule 106   decl_static_fn_stmts -> decl_static_fn_stmt
Rule 107   decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 S_COLON
Rule 108   decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON
Rule 109   decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON
Rule 110   decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON
Rule 111   decl_static_fn_stmt -> static_fn_id LP1 RP1 S_COLON
Rule 112   decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON
Rule 113   decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON
Rule 114   decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON
Rule 115   static_fn_id -> ID
Rule 116   print_stmt -> PRINTINFO to_print S_COLON
Rule 117   generate_stmt -> GENERATE to_print S_COLON
Rule 118   to_print -> ID
Rule 119   to_print -> boolean_expr
Rule 120   to_print -> unnamed_pred
Rule 121   boolean_expr -> boolean_expr OR boolean_expr_a
Rule 122   boolean_expr -> boolean_expr_a
Rule 123   boolean_expr_a -> boolean_expr_a XOR boolean_expr_b
Rule 124   boolean_expr_a -> boolean_expr_b
Rule 125   boolean_expr_b -> boolean_expr_b AND boolean_expr_c
Rule 126   boolean_expr_b -> boolean_expr_c
Rule 127   boolean_expr_c -> boolean_expr_c EQ boolean_expr_d
Rule 128   boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d
Rule 129   boolean_expr_c -> boolean_expr_d
Rule 130   boolean_expr_d -> NOT boolean_expr_e
Rule 131   boolean_expr_d -> boolean_expr_e
Rule 132   boolean_expr_e -> atomic_boolean_expr
Rule 133   boolean_expr_e -> LP1 boolean_expr RP1
Rule 134   atomic_boolean_expr -> constants
Rule 135   atomic_boolean_expr -> unary_pred LP1 args RP1
Rule 136   atomic_boolean_expr -> unary_pred IMPLIES unary_pred
Rule 137   atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1
Rule 138   atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1
Rule 139   constants -> TRUE
Rule 140   constants -> FALSE
Rule 141   args -> args COMMA arg
Rule 142   args -> arg
Rule 143   arg -> ID
Rule 144   assign_stmt -> names ASSIGN assign_expr S_COLON
Rule 145   names -> names COMMA name
Rule 146   names -> name
Rule 147   name -> ID
Rule 148   assign_expr -> names ASSIGN assign_expr
Rule 149   assign_expr -> names

Terminals, with rules where they appear

AND                  : 88 125
ASSIGN               : 24 66 72 144 148
CLS_FN               : 30
CLS_VAR              : 31
COLON                : 10 11 28 29 30 31 32 71 72 77 99 101
COMMA                : 13 16 19 22 47 50 50 50 51 51 52 53 53 54 56 56 57 59 61 64 67 74 102 141 145
DOT                  : 94
EQ                   : 127 137
EXTENDS              : 11
FALSE                : 140
FN                   : 28
GENERATE             : 117
ID                   : 12 15 21 24 46 49 73 78 85 95 104 115 118 143 147
IMPLIES              : 136
LP1                  : 10 11 36 37 38 39 42 43 44 45 83 93 107 108 109 110 111 112 113 114 133 135 137 138
LP2                  : 10 11 28 29 30 31 32
LP3                  : 38 39 44 45 81 82 100 101 109 110 113 114
NEQ                  : 128 138
NONE                 : 84
NOT                  : 90 130
OR                   : 86 121
PASS                 : 27
PRINTINFO            : 116
PROGRAM_BEGIN        : 1
PROGRAM_END          : 1
RP1                  : 10 11 36 37 38 39 42 43 44 45 83 93 107 108 109 110 111 112 113 114 133 135 137 138
RP2                  : 10 11 28 29 30 31 32
RP3                  : 38 39 44 45 81 82 100 101 109 110 113 114
R_ARROW              : 37 39 43 45 108 110 112 114
STAR                 : 50 51 53 54 56 57 59 60
STATIC_FN            : 32
S_COLON              : 1 1 9 10 11 27 28 29 30 31 32 33 36 37 38 39 42 43 44 45 98 99 100 101 107 108 109 110 111 112 113 114 116 117 144
TRAIT                : 10 11
TRAIT_OF             : 83
TRUE                 : 139
VAR                  : 29
WS                   : 2
XOR                  : 123
error                : 33

Nonterminals, with rules where they appear

arg                  : 141 142
arg_name             : 71 72
args                 : 81 135 141
assign_expr          : 144 148
assign_stmt          : 8
atomic_boolean_expr  : 132
boolean_expr         : 119 121 133
boolean_expr_a       : 121 122 123
boolean_expr_b       : 123 124 125
boolean_expr_c       : 125 126 127 128
boolean_expr_d       : 127 128 129
boolean_expr_e       : 130 131
class_args           : 10 11
constants            : 134
decl_cls_fn_stmt     : 40 41
decl_cls_fn_stmts    : 30 40
decl_fn_stmt         : 34 35
decl_fn_stmts        : 28 34
decl_static_fn_stmt  : 105 106
decl_static_fn_stmts : 32 105
decl_stmt            : 96 97
decl_stmts           : 29 31 96
fn_id                : 36 37 38 39 42 43 44 45
generate_stmt        : 7
main_arg             : 13 14
main_pred            : 47 48
member_var_name      : 94
name                 : 145 146
names                : 144 145 148 149
necessary_arg        : 19 20
necessary_args       : 16 17 19
next_anonymous_necessary_pred : 61 62
next_anonymous_necessary_preds : 50 51 52 53 54 55 61
next_anonymous_opt_pred : 64 65
next_anonymous_opt_preds : 50 51 52 56 57 58 64
next_named_necessary_pred : 69
next_named_opt_pred  : 70
next_named_pred      : 67 68
next_named_preds     : 50 53 56 59 67
next_preds           : 47 107 108 109 110
optional_arg         : 22 23
optional_args        : 16 18 22
pred_args            : 36 37 38 39 42 43 44 45
pred_expr            : 82 86 93
pred_expr_a          : 86 87 88
pred_expr_b          : 88 89
pred_expr_c          : 90 91
pred_name            : 79 81
print_stmt           : 6
program              : 0
static_fn_id         : 107 108 109 110 111 112 113 114
stmt                 : 3 4
stmts                : 1 3
sub_args             : 13
to_print             : 116 117
trait_decl           : 5
trait_decl_stmt      : 25 26
trait_decl_stmts     : 10 11 25
trait_id             : 10 11
type_var_arg         : 74 75
type_var_args        : 38 39 44 45 74 109 110 113 114
type_var_id          : 76 77
unary_pred           : 11 24 37 39 43 45 63 66 71 72 77 92 94 99 101 108 110 112 114 135 136 136 137 137 138 138
unnamed_pred         : 80 120
var_expr             : 83
var_id               : 98 99 102 103
vars_id              : 100 101 102

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM_BEGIN S_COLON stmts PROGRAM_END S_COLON
    (2) program -> . WS

    PROGRAM_BEGIN   shift and go to state 2
    WS              shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM_BEGIN . S_COLON stmts PROGRAM_END S_COLON

    S_COLON         shift and go to state 4


state 3

    (2) program -> WS .

    $end            reduce using rule 2 (program -> WS .)


state 4

    (1) program -> PROGRAM_BEGIN S_COLON . stmts PROGRAM_END S_COLON
    (3) stmts -> . stmts stmt
    (4) stmts -> . stmt
    (5) stmt -> . trait_decl
    (6) stmt -> . print_stmt
    (7) stmt -> . generate_stmt
    (8) stmt -> . assign_stmt
    (9) stmt -> . S_COLON
    (10) trait_decl -> . TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> . TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON
    (116) print_stmt -> . PRINTINFO to_print S_COLON
    (117) generate_stmt -> . GENERATE to_print S_COLON
    (144) assign_stmt -> . names ASSIGN assign_expr S_COLON
    (145) names -> . names COMMA name
    (146) names -> . name
    (147) name -> . ID

    S_COLON         shift and go to state 5
    TRAIT           shift and go to state 12
    PRINTINFO       shift and go to state 13
    GENERATE        shift and go to state 14
    ID              shift and go to state 17

    stmts                          shift and go to state 6
    stmt                           shift and go to state 7
    trait_decl                     shift and go to state 8
    print_stmt                     shift and go to state 9
    generate_stmt                  shift and go to state 10
    assign_stmt                    shift and go to state 11
    names                          shift and go to state 15
    name                           shift and go to state 16

state 5

    (9) stmt -> S_COLON .

    PROGRAM_END     reduce using rule 9 (stmt -> S_COLON .)
    S_COLON         reduce using rule 9 (stmt -> S_COLON .)
    TRAIT           reduce using rule 9 (stmt -> S_COLON .)
    PRINTINFO       reduce using rule 9 (stmt -> S_COLON .)
    GENERATE        reduce using rule 9 (stmt -> S_COLON .)
    ID              reduce using rule 9 (stmt -> S_COLON .)


state 6

    (1) program -> PROGRAM_BEGIN S_COLON stmts . PROGRAM_END S_COLON
    (3) stmts -> stmts . stmt
    (5) stmt -> . trait_decl
    (6) stmt -> . print_stmt
    (7) stmt -> . generate_stmt
    (8) stmt -> . assign_stmt
    (9) stmt -> . S_COLON
    (10) trait_decl -> . TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> . TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON
    (116) print_stmt -> . PRINTINFO to_print S_COLON
    (117) generate_stmt -> . GENERATE to_print S_COLON
    (144) assign_stmt -> . names ASSIGN assign_expr S_COLON
    (145) names -> . names COMMA name
    (146) names -> . name
    (147) name -> . ID

    PROGRAM_END     shift and go to state 18
    S_COLON         shift and go to state 5
    TRAIT           shift and go to state 12
    PRINTINFO       shift and go to state 13
    GENERATE        shift and go to state 14
    ID              shift and go to state 17

    stmt                           shift and go to state 19
    trait_decl                     shift and go to state 8
    print_stmt                     shift and go to state 9
    generate_stmt                  shift and go to state 10
    assign_stmt                    shift and go to state 11
    names                          shift and go to state 15
    name                           shift and go to state 16

state 7

    (4) stmts -> stmt .

    PROGRAM_END     reduce using rule 4 (stmts -> stmt .)
    S_COLON         reduce using rule 4 (stmts -> stmt .)
    TRAIT           reduce using rule 4 (stmts -> stmt .)
    PRINTINFO       reduce using rule 4 (stmts -> stmt .)
    GENERATE        reduce using rule 4 (stmts -> stmt .)
    ID              reduce using rule 4 (stmts -> stmt .)


state 8

    (5) stmt -> trait_decl .

    PROGRAM_END     reduce using rule 5 (stmt -> trait_decl .)
    S_COLON         reduce using rule 5 (stmt -> trait_decl .)
    TRAIT           reduce using rule 5 (stmt -> trait_decl .)
    PRINTINFO       reduce using rule 5 (stmt -> trait_decl .)
    GENERATE        reduce using rule 5 (stmt -> trait_decl .)
    ID              reduce using rule 5 (stmt -> trait_decl .)


state 9

    (6) stmt -> print_stmt .

    PROGRAM_END     reduce using rule 6 (stmt -> print_stmt .)
    S_COLON         reduce using rule 6 (stmt -> print_stmt .)
    TRAIT           reduce using rule 6 (stmt -> print_stmt .)
    PRINTINFO       reduce using rule 6 (stmt -> print_stmt .)
    GENERATE        reduce using rule 6 (stmt -> print_stmt .)
    ID              reduce using rule 6 (stmt -> print_stmt .)


state 10

    (7) stmt -> generate_stmt .

    PROGRAM_END     reduce using rule 7 (stmt -> generate_stmt .)
    S_COLON         reduce using rule 7 (stmt -> generate_stmt .)
    TRAIT           reduce using rule 7 (stmt -> generate_stmt .)
    PRINTINFO       reduce using rule 7 (stmt -> generate_stmt .)
    GENERATE        reduce using rule 7 (stmt -> generate_stmt .)
    ID              reduce using rule 7 (stmt -> generate_stmt .)


state 11

    (8) stmt -> assign_stmt .

    PROGRAM_END     reduce using rule 8 (stmt -> assign_stmt .)
    S_COLON         reduce using rule 8 (stmt -> assign_stmt .)
    TRAIT           reduce using rule 8 (stmt -> assign_stmt .)
    PRINTINFO       reduce using rule 8 (stmt -> assign_stmt .)
    GENERATE        reduce using rule 8 (stmt -> assign_stmt .)
    ID              reduce using rule 8 (stmt -> assign_stmt .)


state 12

    (10) trait_decl -> TRAIT . trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> TRAIT . trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON
    (12) trait_id -> . ID

    ID              shift and go to state 21

    trait_id                       shift and go to state 20

state 13

    (116) print_stmt -> PRINTINFO . to_print S_COLON
    (118) to_print -> . ID
    (119) to_print -> . boolean_expr
    (120) to_print -> . unnamed_pred
    (121) boolean_expr -> . boolean_expr OR boolean_expr_a
    (122) boolean_expr -> . boolean_expr_a
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE
    (123) boolean_expr_a -> . boolean_expr_a XOR boolean_expr_b
    (124) boolean_expr_a -> . boolean_expr_b
    (85) pred_name -> . ID
    (125) boolean_expr_b -> . boolean_expr_b AND boolean_expr_c
    (126) boolean_expr_b -> . boolean_expr_c
    (127) boolean_expr_c -> . boolean_expr_c EQ boolean_expr_d
    (128) boolean_expr_c -> . boolean_expr_c NEQ boolean_expr_d
    (129) boolean_expr_c -> . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred

    ID              shift and go to state 23
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31
    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    to_print                       shift and go to state 22
    boolean_expr                   shift and go to state 24
    unnamed_pred                   shift and go to state 25
    boolean_expr_a                 shift and go to state 26
    pred_name                      shift and go to state 27
    boolean_expr_b                 shift and go to state 32
    boolean_expr_c                 shift and go to state 33
    boolean_expr_d                 shift and go to state 34
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39

state 14

    (117) generate_stmt -> GENERATE . to_print S_COLON
    (118) to_print -> . ID
    (119) to_print -> . boolean_expr
    (120) to_print -> . unnamed_pred
    (121) boolean_expr -> . boolean_expr OR boolean_expr_a
    (122) boolean_expr -> . boolean_expr_a
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE
    (123) boolean_expr_a -> . boolean_expr_a XOR boolean_expr_b
    (124) boolean_expr_a -> . boolean_expr_b
    (85) pred_name -> . ID
    (125) boolean_expr_b -> . boolean_expr_b AND boolean_expr_c
    (126) boolean_expr_b -> . boolean_expr_c
    (127) boolean_expr_c -> . boolean_expr_c EQ boolean_expr_d
    (128) boolean_expr_c -> . boolean_expr_c NEQ boolean_expr_d
    (129) boolean_expr_c -> . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred

    ID              shift and go to state 23
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31
    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    to_print                       shift and go to state 42
    boolean_expr                   shift and go to state 24
    unnamed_pred                   shift and go to state 25
    boolean_expr_a                 shift and go to state 26
    pred_name                      shift and go to state 27
    boolean_expr_b                 shift and go to state 32
    boolean_expr_c                 shift and go to state 33
    boolean_expr_d                 shift and go to state 34
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39

state 15

    (144) assign_stmt -> names . ASSIGN assign_expr S_COLON
    (145) names -> names . COMMA name

    ASSIGN          shift and go to state 43
    COMMA           shift and go to state 44


state 16

    (146) names -> name .

    ASSIGN          reduce using rule 146 (names -> name .)
    COMMA           reduce using rule 146 (names -> name .)
    S_COLON         reduce using rule 146 (names -> name .)


state 17

    (147) name -> ID .

    ASSIGN          reduce using rule 147 (name -> ID .)
    COMMA           reduce using rule 147 (name -> ID .)
    S_COLON         reduce using rule 147 (name -> ID .)


state 18

    (1) program -> PROGRAM_BEGIN S_COLON stmts PROGRAM_END . S_COLON

    S_COLON         shift and go to state 45


state 19

    (3) stmts -> stmts stmt .

    PROGRAM_END     reduce using rule 3 (stmts -> stmts stmt .)
    S_COLON         reduce using rule 3 (stmts -> stmts stmt .)
    TRAIT           reduce using rule 3 (stmts -> stmts stmt .)
    PRINTINFO       reduce using rule 3 (stmts -> stmts stmt .)
    GENERATE        reduce using rule 3 (stmts -> stmts stmt .)
    ID              reduce using rule 3 (stmts -> stmts stmt .)


state 20

    (10) trait_decl -> TRAIT trait_id . LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> TRAIT trait_id . LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON

    LP1             shift and go to state 46


state 21

    (12) trait_id -> ID .

    LP1             reduce using rule 12 (trait_id -> ID .)


state 22

    (116) print_stmt -> PRINTINFO to_print . S_COLON

    S_COLON         shift and go to state 47


state 23

    (118) to_print -> ID .
    (85) pred_name -> ID .

    S_COLON         reduce using rule 118 (to_print -> ID .)
    LP3             reduce using rule 85 (pred_name -> ID .)
    LP1             reduce using rule 85 (pred_name -> ID .)
    IMPLIES         reduce using rule 85 (pred_name -> ID .)


state 24

    (119) to_print -> boolean_expr .
    (121) boolean_expr -> boolean_expr . OR boolean_expr_a

    S_COLON         reduce using rule 119 (to_print -> boolean_expr .)
    OR              shift and go to state 48


state 25

    (120) to_print -> unnamed_pred .
    (80) unary_pred -> unnamed_pred .

    S_COLON         reduce using rule 120 (to_print -> unnamed_pred .)
    LP1             reduce using rule 80 (unary_pred -> unnamed_pred .)
    IMPLIES         reduce using rule 80 (unary_pred -> unnamed_pred .)


state 26

    (122) boolean_expr -> boolean_expr_a .
    (123) boolean_expr_a -> boolean_expr_a . XOR boolean_expr_b

    OR              reduce using rule 122 (boolean_expr -> boolean_expr_a .)
    S_COLON         reduce using rule 122 (boolean_expr -> boolean_expr_a .)
    RP1             reduce using rule 122 (boolean_expr -> boolean_expr_a .)
    XOR             shift and go to state 49


state 27

    (81) unnamed_pred -> pred_name . LP3 args RP3
    (79) unary_pred -> pred_name .

    LP3             shift and go to state 50
    LP1             reduce using rule 79 (unary_pred -> pred_name .)
    IMPLIES         reduce using rule 79 (unary_pred -> pred_name .)


state 28

    (82) unnamed_pred -> LP3 . pred_expr RP3
    (86) pred_expr -> . pred_expr OR pred_expr_a
    (87) pred_expr -> . pred_expr_a
    (88) pred_expr_a -> . pred_expr_a AND pred_expr_b
    (89) pred_expr_a -> . pred_expr_b
    (90) pred_expr_b -> . NOT pred_expr_c
    (91) pred_expr_b -> . pred_expr_c
    (92) pred_expr_c -> . unary_pred
    (93) pred_expr_c -> . LP1 pred_expr RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 54
    LP1             shift and go to state 57
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    pred_expr                      shift and go to state 51
    pred_expr_a                    shift and go to state 52
    pred_expr_b                    shift and go to state 53
    pred_expr_c                    shift and go to state 55
    unary_pred                     shift and go to state 56
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 29

    (83) unnamed_pred -> TRAIT_OF . LP1 var_expr RP1

    LP1             shift and go to state 61


state 30

    (133) boolean_expr_e -> LP1 . boolean_expr RP1
    (137) atomic_boolean_expr -> LP1 . unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> LP1 . unary_pred NEQ unary_pred RP1
    (121) boolean_expr -> . boolean_expr OR boolean_expr_a
    (122) boolean_expr -> . boolean_expr_a
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (123) boolean_expr_a -> . boolean_expr_a XOR boolean_expr_b
    (124) boolean_expr_a -> . boolean_expr_b
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE
    (125) boolean_expr_b -> . boolean_expr_b AND boolean_expr_c
    (126) boolean_expr_b -> . boolean_expr_c
    (127) boolean_expr_c -> . boolean_expr_c EQ boolean_expr_d
    (128) boolean_expr_c -> . boolean_expr_c NEQ boolean_expr_d
    (129) boolean_expr_c -> . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31
    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    boolean_expr                   shift and go to state 62
    unary_pred                     shift and go to state 63
    boolean_expr_a                 shift and go to state 26
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59
    boolean_expr_b                 shift and go to state 32
    boolean_expr_c                 shift and go to state 33
    boolean_expr_d                 shift and go to state 34
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38

state 31

    (84) unnamed_pred -> NONE .

    S_COLON         reduce using rule 84 (unnamed_pred -> NONE .)
    LP1             reduce using rule 84 (unnamed_pred -> NONE .)
    IMPLIES         reduce using rule 84 (unnamed_pred -> NONE .)
    AND             reduce using rule 84 (unnamed_pred -> NONE .)
    RP3             reduce using rule 84 (unnamed_pred -> NONE .)
    OR              reduce using rule 84 (unnamed_pred -> NONE .)
    EQ              reduce using rule 84 (unnamed_pred -> NONE .)
    NEQ             reduce using rule 84 (unnamed_pred -> NONE .)
    RP1             reduce using rule 84 (unnamed_pred -> NONE .)
    DOT             reduce using rule 84 (unnamed_pred -> NONE .)
    XOR             reduce using rule 84 (unnamed_pred -> NONE .)
    COLON           reduce using rule 84 (unnamed_pred -> NONE .)
    COMMA           reduce using rule 84 (unnamed_pred -> NONE .)


state 32

    (124) boolean_expr_a -> boolean_expr_b .
    (125) boolean_expr_b -> boolean_expr_b . AND boolean_expr_c

    XOR             reduce using rule 124 (boolean_expr_a -> boolean_expr_b .)
    OR              reduce using rule 124 (boolean_expr_a -> boolean_expr_b .)
    S_COLON         reduce using rule 124 (boolean_expr_a -> boolean_expr_b .)
    RP1             reduce using rule 124 (boolean_expr_a -> boolean_expr_b .)
    AND             shift and go to state 64


state 33

    (126) boolean_expr_b -> boolean_expr_c .
    (127) boolean_expr_c -> boolean_expr_c . EQ boolean_expr_d
    (128) boolean_expr_c -> boolean_expr_c . NEQ boolean_expr_d

    AND             reduce using rule 126 (boolean_expr_b -> boolean_expr_c .)
    XOR             reduce using rule 126 (boolean_expr_b -> boolean_expr_c .)
    OR              reduce using rule 126 (boolean_expr_b -> boolean_expr_c .)
    S_COLON         reduce using rule 126 (boolean_expr_b -> boolean_expr_c .)
    RP1             reduce using rule 126 (boolean_expr_b -> boolean_expr_c .)
    EQ              shift and go to state 65
    NEQ             shift and go to state 66


state 34

    (129) boolean_expr_c -> boolean_expr_d .

    EQ              reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)
    NEQ             reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)
    AND             reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)
    XOR             reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)
    OR              reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)
    S_COLON         reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)
    RP1             reduce using rule 129 (boolean_expr_c -> boolean_expr_d .)


state 35

    (130) boolean_expr_d -> NOT . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    boolean_expr_e                 shift and go to state 67
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 36

    (131) boolean_expr_d -> boolean_expr_e .

    EQ              reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)
    NEQ             reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)
    AND             reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)
    XOR             reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)
    OR              reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)
    S_COLON         reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)
    RP1             reduce using rule 131 (boolean_expr_d -> boolean_expr_e .)


state 37

    (132) boolean_expr_e -> atomic_boolean_expr .

    EQ              reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)
    NEQ             reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)
    AND             reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)
    XOR             reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)
    OR              reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)
    S_COLON         reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)
    RP1             reduce using rule 132 (boolean_expr_e -> atomic_boolean_expr .)


state 38

    (134) atomic_boolean_expr -> constants .

    EQ              reduce using rule 134 (atomic_boolean_expr -> constants .)
    NEQ             reduce using rule 134 (atomic_boolean_expr -> constants .)
    AND             reduce using rule 134 (atomic_boolean_expr -> constants .)
    XOR             reduce using rule 134 (atomic_boolean_expr -> constants .)
    OR              reduce using rule 134 (atomic_boolean_expr -> constants .)
    S_COLON         reduce using rule 134 (atomic_boolean_expr -> constants .)
    RP1             reduce using rule 134 (atomic_boolean_expr -> constants .)


state 39

    (135) atomic_boolean_expr -> unary_pred . LP1 args RP1
    (136) atomic_boolean_expr -> unary_pred . IMPLIES unary_pred

    LP1             shift and go to state 68
    IMPLIES         shift and go to state 69


state 40

    (139) constants -> TRUE .

    EQ              reduce using rule 139 (constants -> TRUE .)
    NEQ             reduce using rule 139 (constants -> TRUE .)
    AND             reduce using rule 139 (constants -> TRUE .)
    XOR             reduce using rule 139 (constants -> TRUE .)
    OR              reduce using rule 139 (constants -> TRUE .)
    S_COLON         reduce using rule 139 (constants -> TRUE .)
    RP1             reduce using rule 139 (constants -> TRUE .)


state 41

    (140) constants -> FALSE .

    EQ              reduce using rule 140 (constants -> FALSE .)
    NEQ             reduce using rule 140 (constants -> FALSE .)
    AND             reduce using rule 140 (constants -> FALSE .)
    XOR             reduce using rule 140 (constants -> FALSE .)
    OR              reduce using rule 140 (constants -> FALSE .)
    S_COLON         reduce using rule 140 (constants -> FALSE .)
    RP1             reduce using rule 140 (constants -> FALSE .)


state 42

    (117) generate_stmt -> GENERATE to_print . S_COLON

    S_COLON         shift and go to state 70


state 43

    (144) assign_stmt -> names ASSIGN . assign_expr S_COLON
    (148) assign_expr -> . names ASSIGN assign_expr
    (149) assign_expr -> . names
    (145) names -> . names COMMA name
    (146) names -> . name
    (147) name -> . ID

    ID              shift and go to state 17

    names                          shift and go to state 71
    assign_expr                    shift and go to state 72
    name                           shift and go to state 16

state 44

    (145) names -> names COMMA . name
    (147) name -> . ID

    ID              shift and go to state 17

    name                           shift and go to state 73

state 45

    (1) program -> PROGRAM_BEGIN S_COLON stmts PROGRAM_END S_COLON .

    $end            reduce using rule 1 (program -> PROGRAM_BEGIN S_COLON stmts PROGRAM_END S_COLON .)


state 46

    (10) trait_decl -> TRAIT trait_id LP1 . class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> TRAIT trait_id LP1 . class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON
    (13) class_args -> . main_arg COMMA sub_args
    (14) class_args -> . main_arg
    (15) main_arg -> . ID

    ID              shift and go to state 76

    class_args                     shift and go to state 74
    main_arg                       shift and go to state 75

state 47

    (116) print_stmt -> PRINTINFO to_print S_COLON .

    PROGRAM_END     reduce using rule 116 (print_stmt -> PRINTINFO to_print S_COLON .)
    S_COLON         reduce using rule 116 (print_stmt -> PRINTINFO to_print S_COLON .)
    TRAIT           reduce using rule 116 (print_stmt -> PRINTINFO to_print S_COLON .)
    PRINTINFO       reduce using rule 116 (print_stmt -> PRINTINFO to_print S_COLON .)
    GENERATE        reduce using rule 116 (print_stmt -> PRINTINFO to_print S_COLON .)
    ID              reduce using rule 116 (print_stmt -> PRINTINFO to_print S_COLON .)


state 48

    (121) boolean_expr -> boolean_expr OR . boolean_expr_a
    (123) boolean_expr_a -> . boolean_expr_a XOR boolean_expr_b
    (124) boolean_expr_a -> . boolean_expr_b
    (125) boolean_expr_b -> . boolean_expr_b AND boolean_expr_c
    (126) boolean_expr_b -> . boolean_expr_c
    (127) boolean_expr_c -> . boolean_expr_c EQ boolean_expr_d
    (128) boolean_expr_c -> . boolean_expr_c NEQ boolean_expr_d
    (129) boolean_expr_c -> . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    boolean_expr_a                 shift and go to state 77
    boolean_expr_b                 shift and go to state 32
    boolean_expr_c                 shift and go to state 33
    boolean_expr_d                 shift and go to state 34
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 49

    (123) boolean_expr_a -> boolean_expr_a XOR . boolean_expr_b
    (125) boolean_expr_b -> . boolean_expr_b AND boolean_expr_c
    (126) boolean_expr_b -> . boolean_expr_c
    (127) boolean_expr_c -> . boolean_expr_c EQ boolean_expr_d
    (128) boolean_expr_c -> . boolean_expr_c NEQ boolean_expr_d
    (129) boolean_expr_c -> . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    boolean_expr_b                 shift and go to state 78
    boolean_expr_c                 shift and go to state 33
    boolean_expr_d                 shift and go to state 34
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 50

    (81) unnamed_pred -> pred_name LP3 . args RP3
    (141) args -> . args COMMA arg
    (142) args -> . arg
    (143) arg -> . ID

    ID              shift and go to state 81

    args                           shift and go to state 79
    arg                            shift and go to state 80

state 51

    (82) unnamed_pred -> LP3 pred_expr . RP3
    (86) pred_expr -> pred_expr . OR pred_expr_a

    RP3             shift and go to state 82
    OR              shift and go to state 83


state 52

    (87) pred_expr -> pred_expr_a .
    (88) pred_expr_a -> pred_expr_a . AND pred_expr_b

    RP3             reduce using rule 87 (pred_expr -> pred_expr_a .)
    OR              reduce using rule 87 (pred_expr -> pred_expr_a .)
    RP1             reduce using rule 87 (pred_expr -> pred_expr_a .)
    AND             shift and go to state 84


state 53

    (89) pred_expr_a -> pred_expr_b .

    AND             reduce using rule 89 (pred_expr_a -> pred_expr_b .)
    RP3             reduce using rule 89 (pred_expr_a -> pred_expr_b .)
    OR              reduce using rule 89 (pred_expr_a -> pred_expr_b .)
    RP1             reduce using rule 89 (pred_expr_a -> pred_expr_b .)


state 54

    (90) pred_expr_b -> NOT . pred_expr_c
    (92) pred_expr_c -> . unary_pred
    (93) pred_expr_c -> . LP1 pred_expr RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    LP1             shift and go to state 57
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    pred_expr_c                    shift and go to state 85
    unary_pred                     shift and go to state 56
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 55

    (91) pred_expr_b -> pred_expr_c .

    AND             reduce using rule 91 (pred_expr_b -> pred_expr_c .)
    RP3             reduce using rule 91 (pred_expr_b -> pred_expr_c .)
    OR              reduce using rule 91 (pred_expr_b -> pred_expr_c .)
    RP1             reduce using rule 91 (pred_expr_b -> pred_expr_c .)


state 56

    (92) pred_expr_c -> unary_pred .

    AND             reduce using rule 92 (pred_expr_c -> unary_pred .)
    RP3             reduce using rule 92 (pred_expr_c -> unary_pred .)
    OR              reduce using rule 92 (pred_expr_c -> unary_pred .)
    RP1             reduce using rule 92 (pred_expr_c -> unary_pred .)


state 57

    (93) pred_expr_c -> LP1 . pred_expr RP1
    (86) pred_expr -> . pred_expr OR pred_expr_a
    (87) pred_expr -> . pred_expr_a
    (88) pred_expr_a -> . pred_expr_a AND pred_expr_b
    (89) pred_expr_a -> . pred_expr_b
    (90) pred_expr_b -> . NOT pred_expr_c
    (91) pred_expr_b -> . pred_expr_c
    (92) pred_expr_c -> . unary_pred
    (93) pred_expr_c -> . LP1 pred_expr RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 54
    LP1             shift and go to state 57
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    pred_expr                      shift and go to state 86
    pred_expr_a                    shift and go to state 52
    pred_expr_b                    shift and go to state 53
    pred_expr_c                    shift and go to state 55
    unary_pred                     shift and go to state 56
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 58

    (79) unary_pred -> pred_name .
    (81) unnamed_pred -> pred_name . LP3 args RP3

    AND             reduce using rule 79 (unary_pred -> pred_name .)
    RP3             reduce using rule 79 (unary_pred -> pred_name .)
    OR              reduce using rule 79 (unary_pred -> pred_name .)
    EQ              reduce using rule 79 (unary_pred -> pred_name .)
    NEQ             reduce using rule 79 (unary_pred -> pred_name .)
    LP1             reduce using rule 79 (unary_pred -> pred_name .)
    IMPLIES         reduce using rule 79 (unary_pred -> pred_name .)
    RP1             reduce using rule 79 (unary_pred -> pred_name .)
    DOT             reduce using rule 79 (unary_pred -> pred_name .)
    XOR             reduce using rule 79 (unary_pred -> pred_name .)
    S_COLON         reduce using rule 79 (unary_pred -> pred_name .)
    COLON           reduce using rule 79 (unary_pred -> pred_name .)
    COMMA           reduce using rule 79 (unary_pred -> pred_name .)
    LP3             shift and go to state 50


state 59

    (80) unary_pred -> unnamed_pred .

    AND             reduce using rule 80 (unary_pred -> unnamed_pred .)
    RP3             reduce using rule 80 (unary_pred -> unnamed_pred .)
    OR              reduce using rule 80 (unary_pred -> unnamed_pred .)
    EQ              reduce using rule 80 (unary_pred -> unnamed_pred .)
    NEQ             reduce using rule 80 (unary_pred -> unnamed_pred .)
    LP1             reduce using rule 80 (unary_pred -> unnamed_pred .)
    IMPLIES         reduce using rule 80 (unary_pred -> unnamed_pred .)
    RP1             reduce using rule 80 (unary_pred -> unnamed_pred .)
    DOT             reduce using rule 80 (unary_pred -> unnamed_pred .)
    XOR             reduce using rule 80 (unary_pred -> unnamed_pred .)
    S_COLON         reduce using rule 80 (unary_pred -> unnamed_pred .)
    COLON           reduce using rule 80 (unary_pred -> unnamed_pred .)
    COMMA           reduce using rule 80 (unary_pred -> unnamed_pred .)


state 60

    (85) pred_name -> ID .

    LP3             reduce using rule 85 (pred_name -> ID .)
    AND             reduce using rule 85 (pred_name -> ID .)
    RP3             reduce using rule 85 (pred_name -> ID .)
    OR              reduce using rule 85 (pred_name -> ID .)
    EQ              reduce using rule 85 (pred_name -> ID .)
    NEQ             reduce using rule 85 (pred_name -> ID .)
    LP1             reduce using rule 85 (pred_name -> ID .)
    IMPLIES         reduce using rule 85 (pred_name -> ID .)
    RP1             reduce using rule 85 (pred_name -> ID .)
    DOT             reduce using rule 85 (pred_name -> ID .)
    XOR             reduce using rule 85 (pred_name -> ID .)
    S_COLON         reduce using rule 85 (pred_name -> ID .)
    COLON           reduce using rule 85 (pred_name -> ID .)
    COMMA           reduce using rule 85 (pred_name -> ID .)


state 61

    (83) unnamed_pred -> TRAIT_OF LP1 . var_expr RP1
    (94) var_expr -> . unary_pred DOT member_var_name
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    var_expr                       shift and go to state 87
    unary_pred                     shift and go to state 88
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 62

    (133) boolean_expr_e -> LP1 boolean_expr . RP1
    (121) boolean_expr -> boolean_expr . OR boolean_expr_a

    RP1             shift and go to state 89
    OR              shift and go to state 48


state 63

    (137) atomic_boolean_expr -> LP1 unary_pred . EQ unary_pred RP1
    (138) atomic_boolean_expr -> LP1 unary_pred . NEQ unary_pred RP1
    (135) atomic_boolean_expr -> unary_pred . LP1 args RP1
    (136) atomic_boolean_expr -> unary_pred . IMPLIES unary_pred

    EQ              shift and go to state 90
    NEQ             shift and go to state 91
    LP1             shift and go to state 68
    IMPLIES         shift and go to state 69


state 64

    (125) boolean_expr_b -> boolean_expr_b AND . boolean_expr_c
    (127) boolean_expr_c -> . boolean_expr_c EQ boolean_expr_d
    (128) boolean_expr_c -> . boolean_expr_c NEQ boolean_expr_d
    (129) boolean_expr_c -> . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    boolean_expr_c                 shift and go to state 92
    boolean_expr_d                 shift and go to state 34
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 65

    (127) boolean_expr_c -> boolean_expr_c EQ . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    boolean_expr_d                 shift and go to state 93
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 66

    (128) boolean_expr_c -> boolean_expr_c NEQ . boolean_expr_d
    (130) boolean_expr_d -> . NOT boolean_expr_e
    (131) boolean_expr_d -> . boolean_expr_e
    (132) boolean_expr_e -> . atomic_boolean_expr
    (133) boolean_expr_e -> . LP1 boolean_expr RP1
    (134) atomic_boolean_expr -> . constants
    (135) atomic_boolean_expr -> . unary_pred LP1 args RP1
    (136) atomic_boolean_expr -> . unary_pred IMPLIES unary_pred
    (137) atomic_boolean_expr -> . LP1 unary_pred EQ unary_pred RP1
    (138) atomic_boolean_expr -> . LP1 unary_pred NEQ unary_pred RP1
    (139) constants -> . TRUE
    (140) constants -> . FALSE
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 35
    LP1             shift and go to state 30
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    boolean_expr_d                 shift and go to state 94
    boolean_expr_e                 shift and go to state 36
    atomic_boolean_expr            shift and go to state 37
    constants                      shift and go to state 38
    unary_pred                     shift and go to state 39
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 67

    (130) boolean_expr_d -> NOT boolean_expr_e .

    EQ              reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)
    NEQ             reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)
    AND             reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)
    XOR             reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)
    OR              reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)
    S_COLON         reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)
    RP1             reduce using rule 130 (boolean_expr_d -> NOT boolean_expr_e .)


state 68

    (135) atomic_boolean_expr -> unary_pred LP1 . args RP1
    (141) args -> . args COMMA arg
    (142) args -> . arg
    (143) arg -> . ID

    ID              shift and go to state 81

    args                           shift and go to state 95
    arg                            shift and go to state 80

state 69

    (136) atomic_boolean_expr -> unary_pred IMPLIES . unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 96
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 70

    (117) generate_stmt -> GENERATE to_print S_COLON .

    PROGRAM_END     reduce using rule 117 (generate_stmt -> GENERATE to_print S_COLON .)
    S_COLON         reduce using rule 117 (generate_stmt -> GENERATE to_print S_COLON .)
    TRAIT           reduce using rule 117 (generate_stmt -> GENERATE to_print S_COLON .)
    PRINTINFO       reduce using rule 117 (generate_stmt -> GENERATE to_print S_COLON .)
    GENERATE        reduce using rule 117 (generate_stmt -> GENERATE to_print S_COLON .)
    ID              reduce using rule 117 (generate_stmt -> GENERATE to_print S_COLON .)


state 71

    (148) assign_expr -> names . ASSIGN assign_expr
    (149) assign_expr -> names .
    (145) names -> names . COMMA name

    ASSIGN          shift and go to state 97
    S_COLON         reduce using rule 149 (assign_expr -> names .)
    COMMA           shift and go to state 44


state 72

    (144) assign_stmt -> names ASSIGN assign_expr . S_COLON

    S_COLON         shift and go to state 98


state 73

    (145) names -> names COMMA name .

    ASSIGN          reduce using rule 145 (names -> names COMMA name .)
    COMMA           reduce using rule 145 (names -> names COMMA name .)
    S_COLON         reduce using rule 145 (names -> names COMMA name .)


state 74

    (10) trait_decl -> TRAIT trait_id LP1 class_args . RP1 COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> TRAIT trait_id LP1 class_args . RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON

    RP1             shift and go to state 99


state 75

    (13) class_args -> main_arg . COMMA sub_args
    (14) class_args -> main_arg .

    COMMA           shift and go to state 100
    RP1             reduce using rule 14 (class_args -> main_arg .)


state 76

    (15) main_arg -> ID .

    COMMA           reduce using rule 15 (main_arg -> ID .)
    RP1             reduce using rule 15 (main_arg -> ID .)


state 77

    (121) boolean_expr -> boolean_expr OR boolean_expr_a .
    (123) boolean_expr_a -> boolean_expr_a . XOR boolean_expr_b

    OR              reduce using rule 121 (boolean_expr -> boolean_expr OR boolean_expr_a .)
    S_COLON         reduce using rule 121 (boolean_expr -> boolean_expr OR boolean_expr_a .)
    RP1             reduce using rule 121 (boolean_expr -> boolean_expr OR boolean_expr_a .)
    XOR             shift and go to state 49


state 78

    (123) boolean_expr_a -> boolean_expr_a XOR boolean_expr_b .
    (125) boolean_expr_b -> boolean_expr_b . AND boolean_expr_c

    XOR             reduce using rule 123 (boolean_expr_a -> boolean_expr_a XOR boolean_expr_b .)
    OR              reduce using rule 123 (boolean_expr_a -> boolean_expr_a XOR boolean_expr_b .)
    S_COLON         reduce using rule 123 (boolean_expr_a -> boolean_expr_a XOR boolean_expr_b .)
    RP1             reduce using rule 123 (boolean_expr_a -> boolean_expr_a XOR boolean_expr_b .)
    AND             shift and go to state 64


state 79

    (81) unnamed_pred -> pred_name LP3 args . RP3
    (141) args -> args . COMMA arg

    RP3             shift and go to state 101
    COMMA           shift and go to state 102


state 80

    (142) args -> arg .

    RP3             reduce using rule 142 (args -> arg .)
    COMMA           reduce using rule 142 (args -> arg .)
    RP1             reduce using rule 142 (args -> arg .)


state 81

    (143) arg -> ID .

    RP3             reduce using rule 143 (arg -> ID .)
    COMMA           reduce using rule 143 (arg -> ID .)
    RP1             reduce using rule 143 (arg -> ID .)


state 82

    (82) unnamed_pred -> LP3 pred_expr RP3 .

    S_COLON         reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    LP1             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    IMPLIES         reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    AND             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    RP3             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    OR              reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    EQ              reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    NEQ             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    RP1             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    DOT             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    XOR             reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    COLON           reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)
    COMMA           reduce using rule 82 (unnamed_pred -> LP3 pred_expr RP3 .)


state 83

    (86) pred_expr -> pred_expr OR . pred_expr_a
    (88) pred_expr_a -> . pred_expr_a AND pred_expr_b
    (89) pred_expr_a -> . pred_expr_b
    (90) pred_expr_b -> . NOT pred_expr_c
    (91) pred_expr_b -> . pred_expr_c
    (92) pred_expr_c -> . unary_pred
    (93) pred_expr_c -> . LP1 pred_expr RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 54
    LP1             shift and go to state 57
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    pred_expr_a                    shift and go to state 103
    pred_expr_b                    shift and go to state 53
    pred_expr_c                    shift and go to state 55
    unary_pred                     shift and go to state 56
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 84

    (88) pred_expr_a -> pred_expr_a AND . pred_expr_b
    (90) pred_expr_b -> . NOT pred_expr_c
    (91) pred_expr_b -> . pred_expr_c
    (92) pred_expr_c -> . unary_pred
    (93) pred_expr_c -> . LP1 pred_expr RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    NOT             shift and go to state 54
    LP1             shift and go to state 57
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    pred_expr_b                    shift and go to state 104
    pred_expr_c                    shift and go to state 55
    unary_pred                     shift and go to state 56
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 85

    (90) pred_expr_b -> NOT pred_expr_c .

    AND             reduce using rule 90 (pred_expr_b -> NOT pred_expr_c .)
    RP3             reduce using rule 90 (pred_expr_b -> NOT pred_expr_c .)
    OR              reduce using rule 90 (pred_expr_b -> NOT pred_expr_c .)
    RP1             reduce using rule 90 (pred_expr_b -> NOT pred_expr_c .)


state 86

    (93) pred_expr_c -> LP1 pred_expr . RP1
    (86) pred_expr -> pred_expr . OR pred_expr_a

    RP1             shift and go to state 105
    OR              shift and go to state 83


state 87

    (83) unnamed_pred -> TRAIT_OF LP1 var_expr . RP1

    RP1             shift and go to state 106


state 88

    (94) var_expr -> unary_pred . DOT member_var_name

    DOT             shift and go to state 107


state 89

    (133) boolean_expr_e -> LP1 boolean_expr RP1 .

    EQ              reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)
    NEQ             reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)
    AND             reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)
    XOR             reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)
    OR              reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)
    S_COLON         reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)
    RP1             reduce using rule 133 (boolean_expr_e -> LP1 boolean_expr RP1 .)


state 90

    (137) atomic_boolean_expr -> LP1 unary_pred EQ . unary_pred RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 108
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 91

    (138) atomic_boolean_expr -> LP1 unary_pred NEQ . unary_pred RP1
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 109
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 92

    (125) boolean_expr_b -> boolean_expr_b AND boolean_expr_c .
    (127) boolean_expr_c -> boolean_expr_c . EQ boolean_expr_d
    (128) boolean_expr_c -> boolean_expr_c . NEQ boolean_expr_d

    AND             reduce using rule 125 (boolean_expr_b -> boolean_expr_b AND boolean_expr_c .)
    XOR             reduce using rule 125 (boolean_expr_b -> boolean_expr_b AND boolean_expr_c .)
    OR              reduce using rule 125 (boolean_expr_b -> boolean_expr_b AND boolean_expr_c .)
    S_COLON         reduce using rule 125 (boolean_expr_b -> boolean_expr_b AND boolean_expr_c .)
    RP1             reduce using rule 125 (boolean_expr_b -> boolean_expr_b AND boolean_expr_c .)
    EQ              shift and go to state 65
    NEQ             shift and go to state 66


state 93

    (127) boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .

    EQ              reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)
    NEQ             reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)
    AND             reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)
    XOR             reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)
    OR              reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)
    S_COLON         reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)
    RP1             reduce using rule 127 (boolean_expr_c -> boolean_expr_c EQ boolean_expr_d .)


state 94

    (128) boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .

    EQ              reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)
    NEQ             reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)
    AND             reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)
    XOR             reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)
    OR              reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)
    S_COLON         reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)
    RP1             reduce using rule 128 (boolean_expr_c -> boolean_expr_c NEQ boolean_expr_d .)


state 95

    (135) atomic_boolean_expr -> unary_pred LP1 args . RP1
    (141) args -> args . COMMA arg

    RP1             shift and go to state 110
    COMMA           shift and go to state 102


state 96

    (136) atomic_boolean_expr -> unary_pred IMPLIES unary_pred .

    EQ              reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)
    NEQ             reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)
    AND             reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)
    XOR             reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)
    OR              reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)
    S_COLON         reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)
    RP1             reduce using rule 136 (atomic_boolean_expr -> unary_pred IMPLIES unary_pred .)


state 97

    (148) assign_expr -> names ASSIGN . assign_expr
    (148) assign_expr -> . names ASSIGN assign_expr
    (149) assign_expr -> . names
    (145) names -> . names COMMA name
    (146) names -> . name
    (147) name -> . ID

    ID              shift and go to state 17

    names                          shift and go to state 71
    assign_expr                    shift and go to state 111
    name                           shift and go to state 16

state 98

    (144) assign_stmt -> names ASSIGN assign_expr S_COLON .

    PROGRAM_END     reduce using rule 144 (assign_stmt -> names ASSIGN assign_expr S_COLON .)
    S_COLON         reduce using rule 144 (assign_stmt -> names ASSIGN assign_expr S_COLON .)
    TRAIT           reduce using rule 144 (assign_stmt -> names ASSIGN assign_expr S_COLON .)
    PRINTINFO       reduce using rule 144 (assign_stmt -> names ASSIGN assign_expr S_COLON .)
    GENERATE        reduce using rule 144 (assign_stmt -> names ASSIGN assign_expr S_COLON .)
    ID              reduce using rule 144 (assign_stmt -> names ASSIGN assign_expr S_COLON .)


state 99

    (10) trait_decl -> TRAIT trait_id LP1 class_args RP1 . COLON LP2 trait_decl_stmts RP2 S_COLON
    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 . EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON

    COLON           shift and go to state 112
    EXTENDS         shift and go to state 113


state 100

    (13) class_args -> main_arg COMMA . sub_args
    (16) sub_args -> . necessary_args COMMA optional_args
    (17) sub_args -> . necessary_args
    (18) sub_args -> . optional_args
    (19) necessary_args -> . necessary_args COMMA necessary_arg
    (20) necessary_args -> . necessary_arg
    (22) optional_args -> . optional_args COMMA optional_arg
    (23) optional_args -> . optional_arg
    (21) necessary_arg -> . ID
    (24) optional_arg -> . ID ASSIGN unary_pred

    ID              shift and go to state 119

    sub_args                       shift and go to state 114
    necessary_args                 shift and go to state 115
    optional_args                  shift and go to state 116
    necessary_arg                  shift and go to state 117
    optional_arg                   shift and go to state 118

state 101

    (81) unnamed_pred -> pred_name LP3 args RP3 .

    S_COLON         reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    LP1             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    IMPLIES         reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    AND             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    RP3             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    OR              reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    EQ              reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    NEQ             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    RP1             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    DOT             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    XOR             reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    COLON           reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)
    COMMA           reduce using rule 81 (unnamed_pred -> pred_name LP3 args RP3 .)


state 102

    (141) args -> args COMMA . arg
    (143) arg -> . ID

    ID              shift and go to state 81

    arg                            shift and go to state 120

state 103

    (86) pred_expr -> pred_expr OR pred_expr_a .
    (88) pred_expr_a -> pred_expr_a . AND pred_expr_b

    RP3             reduce using rule 86 (pred_expr -> pred_expr OR pred_expr_a .)
    OR              reduce using rule 86 (pred_expr -> pred_expr OR pred_expr_a .)
    RP1             reduce using rule 86 (pred_expr -> pred_expr OR pred_expr_a .)
    AND             shift and go to state 84


state 104

    (88) pred_expr_a -> pred_expr_a AND pred_expr_b .

    AND             reduce using rule 88 (pred_expr_a -> pred_expr_a AND pred_expr_b .)
    RP3             reduce using rule 88 (pred_expr_a -> pred_expr_a AND pred_expr_b .)
    OR              reduce using rule 88 (pred_expr_a -> pred_expr_a AND pred_expr_b .)
    RP1             reduce using rule 88 (pred_expr_a -> pred_expr_a AND pred_expr_b .)


state 105

    (93) pred_expr_c -> LP1 pred_expr RP1 .

    AND             reduce using rule 93 (pred_expr_c -> LP1 pred_expr RP1 .)
    RP3             reduce using rule 93 (pred_expr_c -> LP1 pred_expr RP1 .)
    OR              reduce using rule 93 (pred_expr_c -> LP1 pred_expr RP1 .)
    RP1             reduce using rule 93 (pred_expr_c -> LP1 pred_expr RP1 .)


state 106

    (83) unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .

    S_COLON         reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    LP1             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    IMPLIES         reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    AND             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    RP3             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    OR              reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    EQ              reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    NEQ             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    RP1             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    DOT             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    XOR             reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    COLON           reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)
    COMMA           reduce using rule 83 (unnamed_pred -> TRAIT_OF LP1 var_expr RP1 .)


state 107

    (94) var_expr -> unary_pred DOT . member_var_name
    (95) member_var_name -> . ID

    ID              shift and go to state 122

    member_var_name                shift and go to state 121

state 108

    (137) atomic_boolean_expr -> LP1 unary_pred EQ unary_pred . RP1

    RP1             shift and go to state 123


state 109

    (138) atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred . RP1

    RP1             shift and go to state 124


state 110

    (135) atomic_boolean_expr -> unary_pred LP1 args RP1 .

    EQ              reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)
    NEQ             reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)
    AND             reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)
    XOR             reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)
    OR              reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)
    S_COLON         reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)
    RP1             reduce using rule 135 (atomic_boolean_expr -> unary_pred LP1 args RP1 .)


state 111

    (148) assign_expr -> names ASSIGN assign_expr .

    S_COLON         reduce using rule 148 (assign_expr -> names ASSIGN assign_expr .)


state 112

    (10) trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON . LP2 trait_decl_stmts RP2 S_COLON

    LP2             shift and go to state 125


state 113

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS . unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 126
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 114

    (13) class_args -> main_arg COMMA sub_args .

    RP1             reduce using rule 13 (class_args -> main_arg COMMA sub_args .)


state 115

    (16) sub_args -> necessary_args . COMMA optional_args
    (17) sub_args -> necessary_args .
    (19) necessary_args -> necessary_args . COMMA necessary_arg

    COMMA           shift and go to state 127
    RP1             reduce using rule 17 (sub_args -> necessary_args .)


state 116

    (18) sub_args -> optional_args .
    (22) optional_args -> optional_args . COMMA optional_arg

    RP1             reduce using rule 18 (sub_args -> optional_args .)
    COMMA           shift and go to state 128


state 117

    (20) necessary_args -> necessary_arg .

    COMMA           reduce using rule 20 (necessary_args -> necessary_arg .)
    RP1             reduce using rule 20 (necessary_args -> necessary_arg .)


state 118

    (23) optional_args -> optional_arg .

    COMMA           reduce using rule 23 (optional_args -> optional_arg .)
    RP1             reduce using rule 23 (optional_args -> optional_arg .)


state 119

    (21) necessary_arg -> ID .
    (24) optional_arg -> ID . ASSIGN unary_pred

    COMMA           reduce using rule 21 (necessary_arg -> ID .)
    RP1             reduce using rule 21 (necessary_arg -> ID .)
    ASSIGN          shift and go to state 129


state 120

    (141) args -> args COMMA arg .

    RP3             reduce using rule 141 (args -> args COMMA arg .)
    COMMA           reduce using rule 141 (args -> args COMMA arg .)
    RP1             reduce using rule 141 (args -> args COMMA arg .)


state 121

    (94) var_expr -> unary_pred DOT member_var_name .

    RP1             reduce using rule 94 (var_expr -> unary_pred DOT member_var_name .)


state 122

    (95) member_var_name -> ID .

    RP1             reduce using rule 95 (member_var_name -> ID .)


state 123

    (137) atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .

    EQ              reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)
    NEQ             reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)
    AND             reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)
    XOR             reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)
    OR              reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)
    S_COLON         reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)
    RP1             reduce using rule 137 (atomic_boolean_expr -> LP1 unary_pred EQ unary_pred RP1 .)


state 124

    (138) atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .

    EQ              reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)
    NEQ             reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)
    AND             reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)
    XOR             reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)
    OR              reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)
    S_COLON         reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)
    RP1             reduce using rule 138 (atomic_boolean_expr -> LP1 unary_pred NEQ unary_pred RP1 .)


state 125

    (10) trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 . trait_decl_stmts RP2 S_COLON
    (25) trait_decl_stmts -> . trait_decl_stmts trait_decl_stmt
    (26) trait_decl_stmts -> . trait_decl_stmt
    (27) trait_decl_stmts -> . PASS S_COLON
    (28) trait_decl_stmt -> . FN COLON LP2 decl_fn_stmts RP2 S_COLON
    (29) trait_decl_stmt -> . VAR COLON LP2 decl_stmts RP2 S_COLON
    (30) trait_decl_stmt -> . CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON
    (31) trait_decl_stmt -> . CLS_VAR COLON LP2 decl_stmts RP2 S_COLON
    (32) trait_decl_stmt -> . STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON
    (33) trait_decl_stmt -> . error S_COLON

    PASS            shift and go to state 132
    FN              shift and go to state 133
    VAR             shift and go to state 134
    CLS_FN          shift and go to state 135
    CLS_VAR         shift and go to state 136
    STATIC_FN       shift and go to state 137
    error           shift and go to state 138

    trait_decl_stmts               shift and go to state 130
    trait_decl_stmt                shift and go to state 131

state 126

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred . COLON LP2 trait_decl_stmts RP2 S_COLON

    COLON           shift and go to state 139


state 127

    (16) sub_args -> necessary_args COMMA . optional_args
    (19) necessary_args -> necessary_args COMMA . necessary_arg
    (22) optional_args -> . optional_args COMMA optional_arg
    (23) optional_args -> . optional_arg
    (21) necessary_arg -> . ID
    (24) optional_arg -> . ID ASSIGN unary_pred

    ID              shift and go to state 119

    optional_args                  shift and go to state 140
    necessary_arg                  shift and go to state 141
    optional_arg                   shift and go to state 118

state 128

    (22) optional_args -> optional_args COMMA . optional_arg
    (24) optional_arg -> . ID ASSIGN unary_pred

    ID              shift and go to state 143

    optional_arg                   shift and go to state 142

state 129

    (24) optional_arg -> ID ASSIGN . unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 144
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 130

    (10) trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts . RP2 S_COLON
    (25) trait_decl_stmts -> trait_decl_stmts . trait_decl_stmt
    (28) trait_decl_stmt -> . FN COLON LP2 decl_fn_stmts RP2 S_COLON
    (29) trait_decl_stmt -> . VAR COLON LP2 decl_stmts RP2 S_COLON
    (30) trait_decl_stmt -> . CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON
    (31) trait_decl_stmt -> . CLS_VAR COLON LP2 decl_stmts RP2 S_COLON
    (32) trait_decl_stmt -> . STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON
    (33) trait_decl_stmt -> . error S_COLON

    RP2             shift and go to state 145
    FN              shift and go to state 133
    VAR             shift and go to state 134
    CLS_FN          shift and go to state 135
    CLS_VAR         shift and go to state 136
    STATIC_FN       shift and go to state 137
    error           shift and go to state 138

    trait_decl_stmt                shift and go to state 146

state 131

    (26) trait_decl_stmts -> trait_decl_stmt .

    RP2             reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)
    FN              reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)
    VAR             reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)
    CLS_FN          reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)
    CLS_VAR         reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)
    STATIC_FN       reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)
    error           reduce using rule 26 (trait_decl_stmts -> trait_decl_stmt .)


state 132

    (27) trait_decl_stmts -> PASS . S_COLON

    S_COLON         shift and go to state 147


state 133

    (28) trait_decl_stmt -> FN . COLON LP2 decl_fn_stmts RP2 S_COLON

    COLON           shift and go to state 148


state 134

    (29) trait_decl_stmt -> VAR . COLON LP2 decl_stmts RP2 S_COLON

    COLON           shift and go to state 149


state 135

    (30) trait_decl_stmt -> CLS_FN . COLON LP2 decl_cls_fn_stmts RP2 S_COLON

    COLON           shift and go to state 150


state 136

    (31) trait_decl_stmt -> CLS_VAR . COLON LP2 decl_stmts RP2 S_COLON

    COLON           shift and go to state 151


state 137

    (32) trait_decl_stmt -> STATIC_FN . COLON LP2 decl_static_fn_stmts RP2 S_COLON

    COLON           shift and go to state 152


state 138

    (33) trait_decl_stmt -> error . S_COLON

    S_COLON         shift and go to state 153


state 139

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON . LP2 trait_decl_stmts RP2 S_COLON

    LP2             shift and go to state 154


state 140

    (16) sub_args -> necessary_args COMMA optional_args .
    (22) optional_args -> optional_args . COMMA optional_arg

    RP1             reduce using rule 16 (sub_args -> necessary_args COMMA optional_args .)
    COMMA           shift and go to state 128


state 141

    (19) necessary_args -> necessary_args COMMA necessary_arg .

    COMMA           reduce using rule 19 (necessary_args -> necessary_args COMMA necessary_arg .)
    RP1             reduce using rule 19 (necessary_args -> necessary_args COMMA necessary_arg .)


state 142

    (22) optional_args -> optional_args COMMA optional_arg .

    COMMA           reduce using rule 22 (optional_args -> optional_args COMMA optional_arg .)
    RP1             reduce using rule 22 (optional_args -> optional_args COMMA optional_arg .)


state 143

    (24) optional_arg -> ID . ASSIGN unary_pred

    ASSIGN          shift and go to state 129


state 144

    (24) optional_arg -> ID ASSIGN unary_pred .

    COMMA           reduce using rule 24 (optional_arg -> ID ASSIGN unary_pred .)
    RP1             reduce using rule 24 (optional_arg -> ID ASSIGN unary_pred .)


state 145

    (10) trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 . S_COLON

    S_COLON         shift and go to state 155


state 146

    (25) trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .

    RP2             reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)
    FN              reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)
    VAR             reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)
    CLS_FN          reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)
    CLS_VAR         reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)
    STATIC_FN       reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)
    error           reduce using rule 25 (trait_decl_stmts -> trait_decl_stmts trait_decl_stmt .)


state 147

    (27) trait_decl_stmts -> PASS S_COLON .

    RP2             reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)
    FN              reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)
    VAR             reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)
    CLS_FN          reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)
    CLS_VAR         reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)
    STATIC_FN       reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)
    error           reduce using rule 27 (trait_decl_stmts -> PASS S_COLON .)


state 148

    (28) trait_decl_stmt -> FN COLON . LP2 decl_fn_stmts RP2 S_COLON

    LP2             shift and go to state 156


state 149

    (29) trait_decl_stmt -> VAR COLON . LP2 decl_stmts RP2 S_COLON

    LP2             shift and go to state 157


state 150

    (30) trait_decl_stmt -> CLS_FN COLON . LP2 decl_cls_fn_stmts RP2 S_COLON

    LP2             shift and go to state 158


state 151

    (31) trait_decl_stmt -> CLS_VAR COLON . LP2 decl_stmts RP2 S_COLON

    LP2             shift and go to state 159


state 152

    (32) trait_decl_stmt -> STATIC_FN COLON . LP2 decl_static_fn_stmts RP2 S_COLON

    LP2             shift and go to state 160


state 153

    (33) trait_decl_stmt -> error S_COLON .

    RP2             reduce using rule 33 (trait_decl_stmt -> error S_COLON .)
    FN              reduce using rule 33 (trait_decl_stmt -> error S_COLON .)
    VAR             reduce using rule 33 (trait_decl_stmt -> error S_COLON .)
    CLS_FN          reduce using rule 33 (trait_decl_stmt -> error S_COLON .)
    CLS_VAR         reduce using rule 33 (trait_decl_stmt -> error S_COLON .)
    STATIC_FN       reduce using rule 33 (trait_decl_stmt -> error S_COLON .)
    error           reduce using rule 33 (trait_decl_stmt -> error S_COLON .)


state 154

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 . trait_decl_stmts RP2 S_COLON
    (25) trait_decl_stmts -> . trait_decl_stmts trait_decl_stmt
    (26) trait_decl_stmts -> . trait_decl_stmt
    (27) trait_decl_stmts -> . PASS S_COLON
    (28) trait_decl_stmt -> . FN COLON LP2 decl_fn_stmts RP2 S_COLON
    (29) trait_decl_stmt -> . VAR COLON LP2 decl_stmts RP2 S_COLON
    (30) trait_decl_stmt -> . CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON
    (31) trait_decl_stmt -> . CLS_VAR COLON LP2 decl_stmts RP2 S_COLON
    (32) trait_decl_stmt -> . STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON
    (33) trait_decl_stmt -> . error S_COLON

    PASS            shift and go to state 132
    FN              shift and go to state 133
    VAR             shift and go to state 134
    CLS_FN          shift and go to state 135
    CLS_VAR         shift and go to state 136
    STATIC_FN       shift and go to state 137
    error           shift and go to state 138

    trait_decl_stmts               shift and go to state 161
    trait_decl_stmt                shift and go to state 131

state 155

    (10) trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .

    PROGRAM_END     reduce using rule 10 (trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .)
    S_COLON         reduce using rule 10 (trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .)
    TRAIT           reduce using rule 10 (trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .)
    PRINTINFO       reduce using rule 10 (trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .)
    GENERATE        reduce using rule 10 (trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .)
    ID              reduce using rule 10 (trait_decl -> TRAIT trait_id LP1 class_args RP1 COLON LP2 trait_decl_stmts RP2 S_COLON .)


state 156

    (28) trait_decl_stmt -> FN COLON LP2 . decl_fn_stmts RP2 S_COLON
    (34) decl_fn_stmts -> . decl_fn_stmts decl_fn_stmt
    (35) decl_fn_stmts -> . decl_fn_stmt
    (36) decl_fn_stmt -> . fn_id LP1 pred_args RP1 S_COLON
    (37) decl_fn_stmt -> . fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (38) decl_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
    (39) decl_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (46) fn_id -> . ID

    ID              shift and go to state 165

    decl_fn_stmts                  shift and go to state 162
    decl_fn_stmt                   shift and go to state 163
    fn_id                          shift and go to state 164

state 157

    (29) trait_decl_stmt -> VAR COLON LP2 . decl_stmts RP2 S_COLON
    (96) decl_stmts -> . decl_stmts decl_stmt
    (97) decl_stmts -> . decl_stmt
    (98) decl_stmt -> . var_id S_COLON
    (99) decl_stmt -> . var_id COLON unary_pred S_COLON
    (100) decl_stmt -> . LP3 vars_id RP3 S_COLON
    (101) decl_stmt -> . LP3 vars_id RP3 COLON unary_pred S_COLON
    (104) var_id -> . ID

    LP3             shift and go to state 169
    ID              shift and go to state 170

    decl_stmts                     shift and go to state 166
    decl_stmt                      shift and go to state 167
    var_id                         shift and go to state 168

state 158

    (30) trait_decl_stmt -> CLS_FN COLON LP2 . decl_cls_fn_stmts RP2 S_COLON
    (40) decl_cls_fn_stmts -> . decl_cls_fn_stmts decl_cls_fn_stmt
    (41) decl_cls_fn_stmts -> . decl_cls_fn_stmt
    (42) decl_cls_fn_stmt -> . fn_id LP1 pred_args RP1 S_COLON
    (43) decl_cls_fn_stmt -> . fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (44) decl_cls_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (46) fn_id -> . ID

    ID              shift and go to state 165

    decl_cls_fn_stmts              shift and go to state 171
    decl_cls_fn_stmt               shift and go to state 172
    fn_id                          shift and go to state 173

state 159

    (31) trait_decl_stmt -> CLS_VAR COLON LP2 . decl_stmts RP2 S_COLON
    (96) decl_stmts -> . decl_stmts decl_stmt
    (97) decl_stmts -> . decl_stmt
    (98) decl_stmt -> . var_id S_COLON
    (99) decl_stmt -> . var_id COLON unary_pred S_COLON
    (100) decl_stmt -> . LP3 vars_id RP3 S_COLON
    (101) decl_stmt -> . LP3 vars_id RP3 COLON unary_pred S_COLON
    (104) var_id -> . ID

    LP3             shift and go to state 169
    ID              shift and go to state 170

    decl_stmts                     shift and go to state 174
    decl_stmt                      shift and go to state 167
    var_id                         shift and go to state 168

state 160

    (32) trait_decl_stmt -> STATIC_FN COLON LP2 . decl_static_fn_stmts RP2 S_COLON
    (105) decl_static_fn_stmts -> . decl_static_fn_stmts decl_static_fn_stmt
    (106) decl_static_fn_stmts -> . decl_static_fn_stmt
    (107) decl_static_fn_stmt -> . static_fn_id LP1 next_preds RP1 S_COLON
    (108) decl_static_fn_stmt -> . static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (109) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (111) decl_static_fn_stmt -> . static_fn_id LP1 RP1 S_COLON
    (112) decl_static_fn_stmt -> . static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON
    (114) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON
    (115) static_fn_id -> . ID

    ID              shift and go to state 178

    decl_static_fn_stmts           shift and go to state 175
    decl_static_fn_stmt            shift and go to state 176
    static_fn_id                   shift and go to state 177

state 161

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts . RP2 S_COLON
    (25) trait_decl_stmts -> trait_decl_stmts . trait_decl_stmt
    (28) trait_decl_stmt -> . FN COLON LP2 decl_fn_stmts RP2 S_COLON
    (29) trait_decl_stmt -> . VAR COLON LP2 decl_stmts RP2 S_COLON
    (30) trait_decl_stmt -> . CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON
    (31) trait_decl_stmt -> . CLS_VAR COLON LP2 decl_stmts RP2 S_COLON
    (32) trait_decl_stmt -> . STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON
    (33) trait_decl_stmt -> . error S_COLON

    RP2             shift and go to state 179
    FN              shift and go to state 133
    VAR             shift and go to state 134
    CLS_FN          shift and go to state 135
    CLS_VAR         shift and go to state 136
    STATIC_FN       shift and go to state 137
    error           shift and go to state 138

    trait_decl_stmt                shift and go to state 146

state 162

    (28) trait_decl_stmt -> FN COLON LP2 decl_fn_stmts . RP2 S_COLON
    (34) decl_fn_stmts -> decl_fn_stmts . decl_fn_stmt
    (36) decl_fn_stmt -> . fn_id LP1 pred_args RP1 S_COLON
    (37) decl_fn_stmt -> . fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (38) decl_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
    (39) decl_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (46) fn_id -> . ID

    RP2             shift and go to state 180
    ID              shift and go to state 165

    decl_fn_stmt                   shift and go to state 181
    fn_id                          shift and go to state 164

state 163

    (35) decl_fn_stmts -> decl_fn_stmt .

    RP2             reduce using rule 35 (decl_fn_stmts -> decl_fn_stmt .)
    ID              reduce using rule 35 (decl_fn_stmts -> decl_fn_stmt .)


state 164

    (36) decl_fn_stmt -> fn_id . LP1 pred_args RP1 S_COLON
    (37) decl_fn_stmt -> fn_id . LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (38) decl_fn_stmt -> fn_id . LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
    (39) decl_fn_stmt -> fn_id . LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON

    LP1             shift and go to state 182
    LP3             shift and go to state 183


state 165

    (46) fn_id -> ID .

    LP1             reduce using rule 46 (fn_id -> ID .)
    LP3             reduce using rule 46 (fn_id -> ID .)


state 166

    (29) trait_decl_stmt -> VAR COLON LP2 decl_stmts . RP2 S_COLON
    (96) decl_stmts -> decl_stmts . decl_stmt
    (98) decl_stmt -> . var_id S_COLON
    (99) decl_stmt -> . var_id COLON unary_pred S_COLON
    (100) decl_stmt -> . LP3 vars_id RP3 S_COLON
    (101) decl_stmt -> . LP3 vars_id RP3 COLON unary_pred S_COLON
    (104) var_id -> . ID

    RP2             shift and go to state 184
    LP3             shift and go to state 169
    ID              shift and go to state 170

    decl_stmt                      shift and go to state 185
    var_id                         shift and go to state 168

state 167

    (97) decl_stmts -> decl_stmt .

    RP2             reduce using rule 97 (decl_stmts -> decl_stmt .)
    LP3             reduce using rule 97 (decl_stmts -> decl_stmt .)
    ID              reduce using rule 97 (decl_stmts -> decl_stmt .)


state 168

    (98) decl_stmt -> var_id . S_COLON
    (99) decl_stmt -> var_id . COLON unary_pred S_COLON

    S_COLON         shift and go to state 186
    COLON           shift and go to state 187


state 169

    (100) decl_stmt -> LP3 . vars_id RP3 S_COLON
    (101) decl_stmt -> LP3 . vars_id RP3 COLON unary_pred S_COLON
    (102) vars_id -> . vars_id COMMA var_id
    (103) vars_id -> . var_id
    (104) var_id -> . ID

    ID              shift and go to state 170

    vars_id                        shift and go to state 188
    var_id                         shift and go to state 189

state 170

    (104) var_id -> ID .

    S_COLON         reduce using rule 104 (var_id -> ID .)
    COLON           reduce using rule 104 (var_id -> ID .)
    RP3             reduce using rule 104 (var_id -> ID .)
    COMMA           reduce using rule 104 (var_id -> ID .)


state 171

    (30) trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts . RP2 S_COLON
    (40) decl_cls_fn_stmts -> decl_cls_fn_stmts . decl_cls_fn_stmt
    (42) decl_cls_fn_stmt -> . fn_id LP1 pred_args RP1 S_COLON
    (43) decl_cls_fn_stmt -> . fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (44) decl_cls_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> . fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (46) fn_id -> . ID

    RP2             shift and go to state 190
    ID              shift and go to state 165

    decl_cls_fn_stmt               shift and go to state 191
    fn_id                          shift and go to state 173

state 172

    (41) decl_cls_fn_stmts -> decl_cls_fn_stmt .

    RP2             reduce using rule 41 (decl_cls_fn_stmts -> decl_cls_fn_stmt .)
    ID              reduce using rule 41 (decl_cls_fn_stmts -> decl_cls_fn_stmt .)


state 173

    (42) decl_cls_fn_stmt -> fn_id . LP1 pred_args RP1 S_COLON
    (43) decl_cls_fn_stmt -> fn_id . LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (44) decl_cls_fn_stmt -> fn_id . LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> fn_id . LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON

    LP1             shift and go to state 192
    LP3             shift and go to state 193


state 174

    (31) trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts . RP2 S_COLON
    (96) decl_stmts -> decl_stmts . decl_stmt
    (98) decl_stmt -> . var_id S_COLON
    (99) decl_stmt -> . var_id COLON unary_pred S_COLON
    (100) decl_stmt -> . LP3 vars_id RP3 S_COLON
    (101) decl_stmt -> . LP3 vars_id RP3 COLON unary_pred S_COLON
    (104) var_id -> . ID

    RP2             shift and go to state 194
    LP3             shift and go to state 169
    ID              shift and go to state 170

    decl_stmt                      shift and go to state 185
    var_id                         shift and go to state 168

state 175

    (32) trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts . RP2 S_COLON
    (105) decl_static_fn_stmts -> decl_static_fn_stmts . decl_static_fn_stmt
    (107) decl_static_fn_stmt -> . static_fn_id LP1 next_preds RP1 S_COLON
    (108) decl_static_fn_stmt -> . static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (109) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (111) decl_static_fn_stmt -> . static_fn_id LP1 RP1 S_COLON
    (112) decl_static_fn_stmt -> . static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON
    (114) decl_static_fn_stmt -> . static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON
    (115) static_fn_id -> . ID

    RP2             shift and go to state 195
    ID              shift and go to state 178

    decl_static_fn_stmt            shift and go to state 196
    static_fn_id                   shift and go to state 177

state 176

    (106) decl_static_fn_stmts -> decl_static_fn_stmt .

    RP2             reduce using rule 106 (decl_static_fn_stmts -> decl_static_fn_stmt .)
    ID              reduce using rule 106 (decl_static_fn_stmts -> decl_static_fn_stmt .)


state 177

    (107) decl_static_fn_stmt -> static_fn_id . LP1 next_preds RP1 S_COLON
    (108) decl_static_fn_stmt -> static_fn_id . LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (109) decl_static_fn_stmt -> static_fn_id . LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> static_fn_id . LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (111) decl_static_fn_stmt -> static_fn_id . LP1 RP1 S_COLON
    (112) decl_static_fn_stmt -> static_fn_id . LP1 RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> static_fn_id . LP3 type_var_args RP3 LP1 RP1 S_COLON
    (114) decl_static_fn_stmt -> static_fn_id . LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON

    LP1             shift and go to state 197
    LP3             shift and go to state 198


state 178

    (115) static_fn_id -> ID .

    LP1             reduce using rule 115 (static_fn_id -> ID .)
    LP3             reduce using rule 115 (static_fn_id -> ID .)


state 179

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 . S_COLON

    S_COLON         shift and go to state 199


state 180

    (28) trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 . S_COLON

    S_COLON         shift and go to state 200


state 181

    (34) decl_fn_stmts -> decl_fn_stmts decl_fn_stmt .

    RP2             reduce using rule 34 (decl_fn_stmts -> decl_fn_stmts decl_fn_stmt .)
    ID              reduce using rule 34 (decl_fn_stmts -> decl_fn_stmts decl_fn_stmt .)


state 182

    (36) decl_fn_stmt -> fn_id LP1 . pred_args RP1 S_COLON
    (37) decl_fn_stmt -> fn_id LP1 . pred_args RP1 R_ARROW unary_pred S_COLON
    (47) pred_args -> . main_pred COMMA next_preds
    (48) pred_args -> . main_pred
    (49) main_pred -> . ID

    ID              shift and go to state 203

    pred_args                      shift and go to state 201
    main_pred                      shift and go to state 202

state 183

    (38) decl_fn_stmt -> fn_id LP3 . type_var_args RP3 LP1 pred_args RP1 S_COLON
    (39) decl_fn_stmt -> fn_id LP3 . type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (74) type_var_args -> . type_var_args COMMA type_var_arg
    (75) type_var_args -> . type_var_arg
    (76) type_var_arg -> . type_var_id
    (77) type_var_arg -> . type_var_id COLON unary_pred
    (78) type_var_id -> . ID

    ID              shift and go to state 207

    type_var_args                  shift and go to state 204
    type_var_arg                   shift and go to state 205
    type_var_id                    shift and go to state 206

state 184

    (29) trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 . S_COLON

    S_COLON         shift and go to state 208


state 185

    (96) decl_stmts -> decl_stmts decl_stmt .

    RP2             reduce using rule 96 (decl_stmts -> decl_stmts decl_stmt .)
    LP3             reduce using rule 96 (decl_stmts -> decl_stmts decl_stmt .)
    ID              reduce using rule 96 (decl_stmts -> decl_stmts decl_stmt .)


state 186

    (98) decl_stmt -> var_id S_COLON .

    RP2             reduce using rule 98 (decl_stmt -> var_id S_COLON .)
    LP3             reduce using rule 98 (decl_stmt -> var_id S_COLON .)
    ID              reduce using rule 98 (decl_stmt -> var_id S_COLON .)


state 187

    (99) decl_stmt -> var_id COLON . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 209
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 188

    (100) decl_stmt -> LP3 vars_id . RP3 S_COLON
    (101) decl_stmt -> LP3 vars_id . RP3 COLON unary_pred S_COLON
    (102) vars_id -> vars_id . COMMA var_id

    RP3             shift and go to state 210
    COMMA           shift and go to state 211


state 189

    (103) vars_id -> var_id .

    RP3             reduce using rule 103 (vars_id -> var_id .)
    COMMA           reduce using rule 103 (vars_id -> var_id .)


state 190

    (30) trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 . S_COLON

    S_COLON         shift and go to state 212


state 191

    (40) decl_cls_fn_stmts -> decl_cls_fn_stmts decl_cls_fn_stmt .

    RP2             reduce using rule 40 (decl_cls_fn_stmts -> decl_cls_fn_stmts decl_cls_fn_stmt .)
    ID              reduce using rule 40 (decl_cls_fn_stmts -> decl_cls_fn_stmts decl_cls_fn_stmt .)


state 192

    (42) decl_cls_fn_stmt -> fn_id LP1 . pred_args RP1 S_COLON
    (43) decl_cls_fn_stmt -> fn_id LP1 . pred_args RP1 R_ARROW unary_pred S_COLON
    (47) pred_args -> . main_pred COMMA next_preds
    (48) pred_args -> . main_pred
    (49) main_pred -> . ID

    ID              shift and go to state 203

    pred_args                      shift and go to state 213
    main_pred                      shift and go to state 202

state 193

    (44) decl_cls_fn_stmt -> fn_id LP3 . type_var_args RP3 LP1 pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> fn_id LP3 . type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (74) type_var_args -> . type_var_args COMMA type_var_arg
    (75) type_var_args -> . type_var_arg
    (76) type_var_arg -> . type_var_id
    (77) type_var_arg -> . type_var_id COLON unary_pred
    (78) type_var_id -> . ID

    ID              shift and go to state 207

    type_var_args                  shift and go to state 214
    type_var_arg                   shift and go to state 205
    type_var_id                    shift and go to state 206

state 194

    (31) trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 . S_COLON

    S_COLON         shift and go to state 215


state 195

    (32) trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 . S_COLON

    S_COLON         shift and go to state 216


state 196

    (105) decl_static_fn_stmts -> decl_static_fn_stmts decl_static_fn_stmt .

    RP2             reduce using rule 105 (decl_static_fn_stmts -> decl_static_fn_stmts decl_static_fn_stmt .)
    ID              reduce using rule 105 (decl_static_fn_stmts -> decl_static_fn_stmts decl_static_fn_stmt .)


state 197

    (107) decl_static_fn_stmt -> static_fn_id LP1 . next_preds RP1 S_COLON
    (108) decl_static_fn_stmt -> static_fn_id LP1 . next_preds RP1 R_ARROW unary_pred S_COLON
    (111) decl_static_fn_stmt -> static_fn_id LP1 . RP1 S_COLON
    (112) decl_static_fn_stmt -> static_fn_id LP1 . RP1 R_ARROW unary_pred S_COLON
    (50) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (51) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR
    (52) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds
    (53) next_preds -> . next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds
    (54) next_preds -> . next_anonymous_necessary_preds COMMA STAR
    (55) next_preds -> . next_anonymous_necessary_preds
    (56) next_preds -> . next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (57) next_preds -> . next_anonymous_opt_preds COMMA STAR
    (58) next_preds -> . next_anonymous_opt_preds
    (59) next_preds -> . STAR COMMA next_named_preds
    (60) next_preds -> . STAR
    (61) next_anonymous_necessary_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred
    (62) next_anonymous_necessary_preds -> . next_anonymous_necessary_pred
    (64) next_anonymous_opt_preds -> . next_anonymous_opt_preds COMMA next_anonymous_opt_pred
    (65) next_anonymous_opt_preds -> . next_anonymous_opt_pred
    (63) next_anonymous_necessary_pred -> . unary_pred
    (66) next_anonymous_opt_pred -> . ASSIGN unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    RP1             shift and go to state 218
    STAR            shift and go to state 222
    ASSIGN          shift and go to state 225
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    next_preds                     shift and go to state 217
    unary_pred                     shift and go to state 219
    next_anonymous_necessary_preds shift and go to state 220
    next_anonymous_opt_preds       shift and go to state 221
    next_anonymous_necessary_pred  shift and go to state 223
    next_anonymous_opt_pred        shift and go to state 224
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 198

    (109) decl_static_fn_stmt -> static_fn_id LP3 . type_var_args RP3 LP1 next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> static_fn_id LP3 . type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> static_fn_id LP3 . type_var_args RP3 LP1 RP1 S_COLON
    (114) decl_static_fn_stmt -> static_fn_id LP3 . type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON
    (74) type_var_args -> . type_var_args COMMA type_var_arg
    (75) type_var_args -> . type_var_arg
    (76) type_var_arg -> . type_var_id
    (77) type_var_arg -> . type_var_id COLON unary_pred
    (78) type_var_id -> . ID

    ID              shift and go to state 207

    type_var_args                  shift and go to state 226
    type_var_arg                   shift and go to state 205
    type_var_id                    shift and go to state 206

state 199

    (11) trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .

    PROGRAM_END     reduce using rule 11 (trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .)
    S_COLON         reduce using rule 11 (trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .)
    TRAIT           reduce using rule 11 (trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .)
    PRINTINFO       reduce using rule 11 (trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .)
    GENERATE        reduce using rule 11 (trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .)
    ID              reduce using rule 11 (trait_decl -> TRAIT trait_id LP1 class_args RP1 EXTENDS unary_pred COLON LP2 trait_decl_stmts RP2 S_COLON .)


state 200

    (28) trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .

    RP2             reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)
    FN              reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)
    VAR             reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)
    CLS_FN          reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)
    CLS_VAR         reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)
    STATIC_FN       reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)
    error           reduce using rule 28 (trait_decl_stmt -> FN COLON LP2 decl_fn_stmts RP2 S_COLON .)


state 201

    (36) decl_fn_stmt -> fn_id LP1 pred_args . RP1 S_COLON
    (37) decl_fn_stmt -> fn_id LP1 pred_args . RP1 R_ARROW unary_pred S_COLON

    RP1             shift and go to state 227


state 202

    (47) pred_args -> main_pred . COMMA next_preds
    (48) pred_args -> main_pred .

    COMMA           shift and go to state 228
    RP1             reduce using rule 48 (pred_args -> main_pred .)


state 203

    (49) main_pred -> ID .

    COMMA           reduce using rule 49 (main_pred -> ID .)
    RP1             reduce using rule 49 (main_pred -> ID .)


state 204

    (38) decl_fn_stmt -> fn_id LP3 type_var_args . RP3 LP1 pred_args RP1 S_COLON
    (39) decl_fn_stmt -> fn_id LP3 type_var_args . RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (74) type_var_args -> type_var_args . COMMA type_var_arg

    RP3             shift and go to state 229
    COMMA           shift and go to state 230


state 205

    (75) type_var_args -> type_var_arg .

    RP3             reduce using rule 75 (type_var_args -> type_var_arg .)
    COMMA           reduce using rule 75 (type_var_args -> type_var_arg .)


state 206

    (76) type_var_arg -> type_var_id .
    (77) type_var_arg -> type_var_id . COLON unary_pred

    RP3             reduce using rule 76 (type_var_arg -> type_var_id .)
    COMMA           reduce using rule 76 (type_var_arg -> type_var_id .)
    COLON           shift and go to state 231


state 207

    (78) type_var_id -> ID .

    COLON           reduce using rule 78 (type_var_id -> ID .)
    RP3             reduce using rule 78 (type_var_id -> ID .)
    COMMA           reduce using rule 78 (type_var_id -> ID .)


state 208

    (29) trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .

    RP2             reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)
    FN              reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)
    VAR             reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)
    CLS_FN          reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)
    CLS_VAR         reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)
    STATIC_FN       reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)
    error           reduce using rule 29 (trait_decl_stmt -> VAR COLON LP2 decl_stmts RP2 S_COLON .)


state 209

    (99) decl_stmt -> var_id COLON unary_pred . S_COLON

    S_COLON         shift and go to state 232


state 210

    (100) decl_stmt -> LP3 vars_id RP3 . S_COLON
    (101) decl_stmt -> LP3 vars_id RP3 . COLON unary_pred S_COLON

    S_COLON         shift and go to state 233
    COLON           shift and go to state 234


state 211

    (102) vars_id -> vars_id COMMA . var_id
    (104) var_id -> . ID

    ID              shift and go to state 170

    var_id                         shift and go to state 235

state 212

    (30) trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .

    RP2             reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)
    FN              reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)
    VAR             reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)
    CLS_FN          reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)
    CLS_VAR         reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)
    STATIC_FN       reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)
    error           reduce using rule 30 (trait_decl_stmt -> CLS_FN COLON LP2 decl_cls_fn_stmts RP2 S_COLON .)


state 213

    (42) decl_cls_fn_stmt -> fn_id LP1 pred_args . RP1 S_COLON
    (43) decl_cls_fn_stmt -> fn_id LP1 pred_args . RP1 R_ARROW unary_pred S_COLON

    RP1             shift and go to state 236


state 214

    (44) decl_cls_fn_stmt -> fn_id LP3 type_var_args . RP3 LP1 pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args . RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON
    (74) type_var_args -> type_var_args . COMMA type_var_arg

    RP3             shift and go to state 237
    COMMA           shift and go to state 230


state 215

    (31) trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .

    RP2             reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)
    FN              reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)
    VAR             reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)
    CLS_FN          reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)
    CLS_VAR         reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)
    STATIC_FN       reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)
    error           reduce using rule 31 (trait_decl_stmt -> CLS_VAR COLON LP2 decl_stmts RP2 S_COLON .)


state 216

    (32) trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .

    RP2             reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)
    FN              reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)
    VAR             reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)
    CLS_FN          reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)
    CLS_VAR         reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)
    STATIC_FN       reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)
    error           reduce using rule 32 (trait_decl_stmt -> STATIC_FN COLON LP2 decl_static_fn_stmts RP2 S_COLON .)


state 217

    (107) decl_static_fn_stmt -> static_fn_id LP1 next_preds . RP1 S_COLON
    (108) decl_static_fn_stmt -> static_fn_id LP1 next_preds . RP1 R_ARROW unary_pred S_COLON

    RP1             shift and go to state 238


state 218

    (111) decl_static_fn_stmt -> static_fn_id LP1 RP1 . S_COLON
    (112) decl_static_fn_stmt -> static_fn_id LP1 RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 239
    R_ARROW         shift and go to state 240


state 219

    (63) next_anonymous_necessary_pred -> unary_pred .

    COMMA           reduce using rule 63 (next_anonymous_necessary_pred -> unary_pred .)
    RP1             reduce using rule 63 (next_anonymous_necessary_pred -> unary_pred .)


state 220

    (50) next_preds -> next_anonymous_necessary_preds . COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (51) next_preds -> next_anonymous_necessary_preds . COMMA next_anonymous_opt_preds COMMA STAR
    (52) next_preds -> next_anonymous_necessary_preds . COMMA next_anonymous_opt_preds
    (53) next_preds -> next_anonymous_necessary_preds . COMMA STAR COMMA next_named_preds
    (54) next_preds -> next_anonymous_necessary_preds . COMMA STAR
    (55) next_preds -> next_anonymous_necessary_preds .
    (61) next_anonymous_necessary_preds -> next_anonymous_necessary_preds . COMMA next_anonymous_necessary_pred

    COMMA           shift and go to state 241
    RP1             reduce using rule 55 (next_preds -> next_anonymous_necessary_preds .)


state 221

    (56) next_preds -> next_anonymous_opt_preds . COMMA STAR COMMA next_named_preds
    (57) next_preds -> next_anonymous_opt_preds . COMMA STAR
    (58) next_preds -> next_anonymous_opt_preds .
    (64) next_anonymous_opt_preds -> next_anonymous_opt_preds . COMMA next_anonymous_opt_pred

    COMMA           shift and go to state 242
    RP1             reduce using rule 58 (next_preds -> next_anonymous_opt_preds .)


state 222

    (59) next_preds -> STAR . COMMA next_named_preds
    (60) next_preds -> STAR .

    COMMA           shift and go to state 243
    RP1             reduce using rule 60 (next_preds -> STAR .)


state 223

    (62) next_anonymous_necessary_preds -> next_anonymous_necessary_pred .

    COMMA           reduce using rule 62 (next_anonymous_necessary_preds -> next_anonymous_necessary_pred .)
    RP1             reduce using rule 62 (next_anonymous_necessary_preds -> next_anonymous_necessary_pred .)


state 224

    (65) next_anonymous_opt_preds -> next_anonymous_opt_pred .

    COMMA           reduce using rule 65 (next_anonymous_opt_preds -> next_anonymous_opt_pred .)
    RP1             reduce using rule 65 (next_anonymous_opt_preds -> next_anonymous_opt_pred .)


state 225

    (66) next_anonymous_opt_pred -> ASSIGN . unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 244
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 226

    (109) decl_static_fn_stmt -> static_fn_id LP3 type_var_args . RP3 LP1 next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args . RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> static_fn_id LP3 type_var_args . RP3 LP1 RP1 S_COLON
    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args . RP3 LP1 RP1 R_ARROW unary_pred S_COLON
    (74) type_var_args -> type_var_args . COMMA type_var_arg

    RP3             shift and go to state 245
    COMMA           shift and go to state 230


state 227

    (36) decl_fn_stmt -> fn_id LP1 pred_args RP1 . S_COLON
    (37) decl_fn_stmt -> fn_id LP1 pred_args RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 246
    R_ARROW         shift and go to state 247


state 228

    (47) pred_args -> main_pred COMMA . next_preds
    (50) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (51) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR
    (52) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds
    (53) next_preds -> . next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds
    (54) next_preds -> . next_anonymous_necessary_preds COMMA STAR
    (55) next_preds -> . next_anonymous_necessary_preds
    (56) next_preds -> . next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (57) next_preds -> . next_anonymous_opt_preds COMMA STAR
    (58) next_preds -> . next_anonymous_opt_preds
    (59) next_preds -> . STAR COMMA next_named_preds
    (60) next_preds -> . STAR
    (61) next_anonymous_necessary_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred
    (62) next_anonymous_necessary_preds -> . next_anonymous_necessary_pred
    (64) next_anonymous_opt_preds -> . next_anonymous_opt_preds COMMA next_anonymous_opt_pred
    (65) next_anonymous_opt_preds -> . next_anonymous_opt_pred
    (63) next_anonymous_necessary_pred -> . unary_pred
    (66) next_anonymous_opt_pred -> . ASSIGN unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    STAR            shift and go to state 222
    ASSIGN          shift and go to state 225
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    next_preds                     shift and go to state 248
    next_anonymous_necessary_preds shift and go to state 220
    next_anonymous_opt_preds       shift and go to state 221
    next_anonymous_necessary_pred  shift and go to state 223
    next_anonymous_opt_pred        shift and go to state 224
    unary_pred                     shift and go to state 219
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 229

    (38) decl_fn_stmt -> fn_id LP3 type_var_args RP3 . LP1 pred_args RP1 S_COLON
    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 . LP1 pred_args RP1 R_ARROW unary_pred S_COLON

    LP1             shift and go to state 249


state 230

    (74) type_var_args -> type_var_args COMMA . type_var_arg
    (76) type_var_arg -> . type_var_id
    (77) type_var_arg -> . type_var_id COLON unary_pred
    (78) type_var_id -> . ID

    ID              shift and go to state 207

    type_var_arg                   shift and go to state 250
    type_var_id                    shift and go to state 206

state 231

    (77) type_var_arg -> type_var_id COLON . unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 251
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 232

    (99) decl_stmt -> var_id COLON unary_pred S_COLON .

    RP2             reduce using rule 99 (decl_stmt -> var_id COLON unary_pred S_COLON .)
    LP3             reduce using rule 99 (decl_stmt -> var_id COLON unary_pred S_COLON .)
    ID              reduce using rule 99 (decl_stmt -> var_id COLON unary_pred S_COLON .)


state 233

    (100) decl_stmt -> LP3 vars_id RP3 S_COLON .

    RP2             reduce using rule 100 (decl_stmt -> LP3 vars_id RP3 S_COLON .)
    LP3             reduce using rule 100 (decl_stmt -> LP3 vars_id RP3 S_COLON .)
    ID              reduce using rule 100 (decl_stmt -> LP3 vars_id RP3 S_COLON .)


state 234

    (101) decl_stmt -> LP3 vars_id RP3 COLON . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 252
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 235

    (102) vars_id -> vars_id COMMA var_id .

    RP3             reduce using rule 102 (vars_id -> vars_id COMMA var_id .)
    COMMA           reduce using rule 102 (vars_id -> vars_id COMMA var_id .)


state 236

    (42) decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 . S_COLON
    (43) decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 253
    R_ARROW         shift and go to state 254


state 237

    (44) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 . LP1 pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 . LP1 pred_args RP1 R_ARROW unary_pred S_COLON

    LP1             shift and go to state 255


state 238

    (107) decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 . S_COLON
    (108) decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 256
    R_ARROW         shift and go to state 257


state 239

    (111) decl_static_fn_stmt -> static_fn_id LP1 RP1 S_COLON .

    RP2             reduce using rule 111 (decl_static_fn_stmt -> static_fn_id LP1 RP1 S_COLON .)
    ID              reduce using rule 111 (decl_static_fn_stmt -> static_fn_id LP1 RP1 S_COLON .)


state 240

    (112) decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 258
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 241

    (50) next_preds -> next_anonymous_necessary_preds COMMA . next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (51) next_preds -> next_anonymous_necessary_preds COMMA . next_anonymous_opt_preds COMMA STAR
    (52) next_preds -> next_anonymous_necessary_preds COMMA . next_anonymous_opt_preds
    (53) next_preds -> next_anonymous_necessary_preds COMMA . STAR COMMA next_named_preds
    (54) next_preds -> next_anonymous_necessary_preds COMMA . STAR
    (61) next_anonymous_necessary_preds -> next_anonymous_necessary_preds COMMA . next_anonymous_necessary_pred
    (64) next_anonymous_opt_preds -> . next_anonymous_opt_preds COMMA next_anonymous_opt_pred
    (65) next_anonymous_opt_preds -> . next_anonymous_opt_pred
    (63) next_anonymous_necessary_pred -> . unary_pred
    (66) next_anonymous_opt_pred -> . ASSIGN unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    STAR            shift and go to state 260
    ASSIGN          shift and go to state 225
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    next_anonymous_opt_preds       shift and go to state 259
    next_anonymous_necessary_pred  shift and go to state 261
    next_anonymous_opt_pred        shift and go to state 224
    unary_pred                     shift and go to state 219
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 242

    (56) next_preds -> next_anonymous_opt_preds COMMA . STAR COMMA next_named_preds
    (57) next_preds -> next_anonymous_opt_preds COMMA . STAR
    (64) next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA . next_anonymous_opt_pred
    (66) next_anonymous_opt_pred -> . ASSIGN unary_pred

    STAR            shift and go to state 262
    ASSIGN          shift and go to state 225

    next_anonymous_opt_pred        shift and go to state 263

state 243

    (59) next_preds -> STAR COMMA . next_named_preds
    (67) next_named_preds -> . next_named_preds COMMA next_named_pred
    (68) next_named_preds -> . next_named_pred
    (69) next_named_pred -> . next_named_necessary_pred
    (70) next_named_pred -> . next_named_opt_pred
    (71) next_named_necessary_pred -> . arg_name COLON unary_pred
    (72) next_named_opt_pred -> . arg_name COLON ASSIGN unary_pred
    (73) arg_name -> . ID

    ID              shift and go to state 269

    next_named_preds               shift and go to state 264
    next_named_pred                shift and go to state 265
    next_named_necessary_pred      shift and go to state 266
    next_named_opt_pred            shift and go to state 267
    arg_name                       shift and go to state 268

state 244

    (66) next_anonymous_opt_pred -> ASSIGN unary_pred .

    COMMA           reduce using rule 66 (next_anonymous_opt_pred -> ASSIGN unary_pred .)
    RP1             reduce using rule 66 (next_anonymous_opt_pred -> ASSIGN unary_pred .)


state 245

    (109) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 . LP1 next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 . LP1 next_preds RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 . LP1 RP1 S_COLON
    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 . LP1 RP1 R_ARROW unary_pred S_COLON

    LP1             shift and go to state 270


state 246

    (36) decl_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON .

    RP2             reduce using rule 36 (decl_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON .)
    ID              reduce using rule 36 (decl_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON .)


state 247

    (37) decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 271
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 248

    (47) pred_args -> main_pred COMMA next_preds .

    RP1             reduce using rule 47 (pred_args -> main_pred COMMA next_preds .)


state 249

    (38) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 . pred_args RP1 S_COLON
    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 . pred_args RP1 R_ARROW unary_pred S_COLON
    (47) pred_args -> . main_pred COMMA next_preds
    (48) pred_args -> . main_pred
    (49) main_pred -> . ID

    ID              shift and go to state 203

    pred_args                      shift and go to state 272
    main_pred                      shift and go to state 202

state 250

    (74) type_var_args -> type_var_args COMMA type_var_arg .

    RP3             reduce using rule 74 (type_var_args -> type_var_args COMMA type_var_arg .)
    COMMA           reduce using rule 74 (type_var_args -> type_var_args COMMA type_var_arg .)


state 251

    (77) type_var_arg -> type_var_id COLON unary_pred .

    RP3             reduce using rule 77 (type_var_arg -> type_var_id COLON unary_pred .)
    COMMA           reduce using rule 77 (type_var_arg -> type_var_id COLON unary_pred .)


state 252

    (101) decl_stmt -> LP3 vars_id RP3 COLON unary_pred . S_COLON

    S_COLON         shift and go to state 273


state 253

    (42) decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON .

    RP2             reduce using rule 42 (decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON .)
    ID              reduce using rule 42 (decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 S_COLON .)


state 254

    (43) decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 274
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 255

    (44) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 . pred_args RP1 S_COLON
    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 . pred_args RP1 R_ARROW unary_pred S_COLON
    (47) pred_args -> . main_pred COMMA next_preds
    (48) pred_args -> . main_pred
    (49) main_pred -> . ID

    ID              shift and go to state 203

    pred_args                      shift and go to state 275
    main_pred                      shift and go to state 202

state 256

    (107) decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 S_COLON .

    RP2             reduce using rule 107 (decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 S_COLON .)
    ID              reduce using rule 107 (decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 S_COLON .)


state 257

    (108) decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 276
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 258

    (112) decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 277


state 259

    (50) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds . COMMA STAR COMMA next_named_preds
    (51) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds . COMMA STAR
    (52) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds .
    (64) next_anonymous_opt_preds -> next_anonymous_opt_preds . COMMA next_anonymous_opt_pred

    COMMA           shift and go to state 278
    RP1             reduce using rule 52 (next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds .)


state 260

    (53) next_preds -> next_anonymous_necessary_preds COMMA STAR . COMMA next_named_preds
    (54) next_preds -> next_anonymous_necessary_preds COMMA STAR .

    COMMA           shift and go to state 279
    RP1             reduce using rule 54 (next_preds -> next_anonymous_necessary_preds COMMA STAR .)


state 261

    (61) next_anonymous_necessary_preds -> next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred .

    COMMA           reduce using rule 61 (next_anonymous_necessary_preds -> next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred .)
    RP1             reduce using rule 61 (next_anonymous_necessary_preds -> next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred .)


state 262

    (56) next_preds -> next_anonymous_opt_preds COMMA STAR . COMMA next_named_preds
    (57) next_preds -> next_anonymous_opt_preds COMMA STAR .

    COMMA           shift and go to state 280
    RP1             reduce using rule 57 (next_preds -> next_anonymous_opt_preds COMMA STAR .)


state 263

    (64) next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA next_anonymous_opt_pred .

    COMMA           reduce using rule 64 (next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA next_anonymous_opt_pred .)
    RP1             reduce using rule 64 (next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA next_anonymous_opt_pred .)


state 264

    (59) next_preds -> STAR COMMA next_named_preds .
    (67) next_named_preds -> next_named_preds . COMMA next_named_pred

    RP1             reduce using rule 59 (next_preds -> STAR COMMA next_named_preds .)
    COMMA           shift and go to state 281


state 265

    (68) next_named_preds -> next_named_pred .

    COMMA           reduce using rule 68 (next_named_preds -> next_named_pred .)
    RP1             reduce using rule 68 (next_named_preds -> next_named_pred .)


state 266

    (69) next_named_pred -> next_named_necessary_pred .

    COMMA           reduce using rule 69 (next_named_pred -> next_named_necessary_pred .)
    RP1             reduce using rule 69 (next_named_pred -> next_named_necessary_pred .)


state 267

    (70) next_named_pred -> next_named_opt_pred .

    COMMA           reduce using rule 70 (next_named_pred -> next_named_opt_pred .)
    RP1             reduce using rule 70 (next_named_pred -> next_named_opt_pred .)


state 268

    (71) next_named_necessary_pred -> arg_name . COLON unary_pred
    (72) next_named_opt_pred -> arg_name . COLON ASSIGN unary_pred

    COLON           shift and go to state 282


state 269

    (73) arg_name -> ID .

    COLON           reduce using rule 73 (arg_name -> ID .)


state 270

    (109) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 . next_preds RP1 S_COLON
    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 . next_preds RP1 R_ARROW unary_pred S_COLON
    (113) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 . RP1 S_COLON
    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 . RP1 R_ARROW unary_pred S_COLON
    (50) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (51) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR
    (52) next_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_opt_preds
    (53) next_preds -> . next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds
    (54) next_preds -> . next_anonymous_necessary_preds COMMA STAR
    (55) next_preds -> . next_anonymous_necessary_preds
    (56) next_preds -> . next_anonymous_opt_preds COMMA STAR COMMA next_named_preds
    (57) next_preds -> . next_anonymous_opt_preds COMMA STAR
    (58) next_preds -> . next_anonymous_opt_preds
    (59) next_preds -> . STAR COMMA next_named_preds
    (60) next_preds -> . STAR
    (61) next_anonymous_necessary_preds -> . next_anonymous_necessary_preds COMMA next_anonymous_necessary_pred
    (62) next_anonymous_necessary_preds -> . next_anonymous_necessary_pred
    (64) next_anonymous_opt_preds -> . next_anonymous_opt_preds COMMA next_anonymous_opt_pred
    (65) next_anonymous_opt_preds -> . next_anonymous_opt_pred
    (63) next_anonymous_necessary_pred -> . unary_pred
    (66) next_anonymous_opt_pred -> . ASSIGN unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    RP1             shift and go to state 284
    STAR            shift and go to state 222
    ASSIGN          shift and go to state 225
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    next_preds                     shift and go to state 283
    unary_pred                     shift and go to state 219
    next_anonymous_necessary_preds shift and go to state 220
    next_anonymous_opt_preds       shift and go to state 221
    next_anonymous_necessary_pred  shift and go to state 223
    next_anonymous_opt_pred        shift and go to state 224
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 271

    (37) decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 285


state 272

    (38) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args . RP1 S_COLON
    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args . RP1 R_ARROW unary_pred S_COLON

    RP1             shift and go to state 286


state 273

    (101) decl_stmt -> LP3 vars_id RP3 COLON unary_pred S_COLON .

    RP2             reduce using rule 101 (decl_stmt -> LP3 vars_id RP3 COLON unary_pred S_COLON .)
    LP3             reduce using rule 101 (decl_stmt -> LP3 vars_id RP3 COLON unary_pred S_COLON .)
    ID              reduce using rule 101 (decl_stmt -> LP3 vars_id RP3 COLON unary_pred S_COLON .)


state 274

    (43) decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 287


state 275

    (44) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args . RP1 S_COLON
    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args . RP1 R_ARROW unary_pred S_COLON

    RP1             shift and go to state 288


state 276

    (108) decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 289


state 277

    (112) decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 112 (decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 112 (decl_static_fn_stmt -> static_fn_id LP1 RP1 R_ARROW unary_pred S_COLON .)


state 278

    (50) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA . STAR COMMA next_named_preds
    (51) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA . STAR
    (64) next_anonymous_opt_preds -> next_anonymous_opt_preds COMMA . next_anonymous_opt_pred
    (66) next_anonymous_opt_pred -> . ASSIGN unary_pred

    STAR            shift and go to state 290
    ASSIGN          shift and go to state 225

    next_anonymous_opt_pred        shift and go to state 263

state 279

    (53) next_preds -> next_anonymous_necessary_preds COMMA STAR COMMA . next_named_preds
    (67) next_named_preds -> . next_named_preds COMMA next_named_pred
    (68) next_named_preds -> . next_named_pred
    (69) next_named_pred -> . next_named_necessary_pred
    (70) next_named_pred -> . next_named_opt_pred
    (71) next_named_necessary_pred -> . arg_name COLON unary_pred
    (72) next_named_opt_pred -> . arg_name COLON ASSIGN unary_pred
    (73) arg_name -> . ID

    ID              shift and go to state 269

    next_named_preds               shift and go to state 291
    next_named_pred                shift and go to state 265
    next_named_necessary_pred      shift and go to state 266
    next_named_opt_pred            shift and go to state 267
    arg_name                       shift and go to state 268

state 280

    (56) next_preds -> next_anonymous_opt_preds COMMA STAR COMMA . next_named_preds
    (67) next_named_preds -> . next_named_preds COMMA next_named_pred
    (68) next_named_preds -> . next_named_pred
    (69) next_named_pred -> . next_named_necessary_pred
    (70) next_named_pred -> . next_named_opt_pred
    (71) next_named_necessary_pred -> . arg_name COLON unary_pred
    (72) next_named_opt_pred -> . arg_name COLON ASSIGN unary_pred
    (73) arg_name -> . ID

    ID              shift and go to state 269

    next_named_preds               shift and go to state 292
    next_named_pred                shift and go to state 265
    next_named_necessary_pred      shift and go to state 266
    next_named_opt_pred            shift and go to state 267
    arg_name                       shift and go to state 268

state 281

    (67) next_named_preds -> next_named_preds COMMA . next_named_pred
    (69) next_named_pred -> . next_named_necessary_pred
    (70) next_named_pred -> . next_named_opt_pred
    (71) next_named_necessary_pred -> . arg_name COLON unary_pred
    (72) next_named_opt_pred -> . arg_name COLON ASSIGN unary_pred
    (73) arg_name -> . ID

    ID              shift and go to state 269

    next_named_pred                shift and go to state 293
    next_named_necessary_pred      shift and go to state 266
    next_named_opt_pred            shift and go to state 267
    arg_name                       shift and go to state 268

state 282

    (71) next_named_necessary_pred -> arg_name COLON . unary_pred
    (72) next_named_opt_pred -> arg_name COLON . ASSIGN unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ASSIGN          shift and go to state 295
    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 294
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 283

    (109) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds . RP1 S_COLON
    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds . RP1 R_ARROW unary_pred S_COLON

    RP1             shift and go to state 296


state 284

    (113) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 . S_COLON
    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 297
    R_ARROW         shift and go to state 298


state 285

    (37) decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 37 (decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 37 (decl_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)


state 286

    (38) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 . S_COLON
    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 299
    R_ARROW         shift and go to state 300


state 287

    (43) decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 43 (decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 43 (decl_cls_fn_stmt -> fn_id LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)


state 288

    (44) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 . S_COLON
    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 301
    R_ARROW         shift and go to state 302


state 289

    (108) decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 108 (decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 108 (decl_static_fn_stmt -> static_fn_id LP1 next_preds RP1 R_ARROW unary_pred S_COLON .)


state 290

    (50) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR . COMMA next_named_preds
    (51) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR .

    COMMA           shift and go to state 303
    RP1             reduce using rule 51 (next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR .)


state 291

    (53) next_preds -> next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds .
    (67) next_named_preds -> next_named_preds . COMMA next_named_pred

    RP1             reduce using rule 53 (next_preds -> next_anonymous_necessary_preds COMMA STAR COMMA next_named_preds .)
    COMMA           shift and go to state 281


state 292

    (56) next_preds -> next_anonymous_opt_preds COMMA STAR COMMA next_named_preds .
    (67) next_named_preds -> next_named_preds . COMMA next_named_pred

    RP1             reduce using rule 56 (next_preds -> next_anonymous_opt_preds COMMA STAR COMMA next_named_preds .)
    COMMA           shift and go to state 281


state 293

    (67) next_named_preds -> next_named_preds COMMA next_named_pred .

    COMMA           reduce using rule 67 (next_named_preds -> next_named_preds COMMA next_named_pred .)
    RP1             reduce using rule 67 (next_named_preds -> next_named_preds COMMA next_named_pred .)


state 294

    (71) next_named_necessary_pred -> arg_name COLON unary_pred .

    COMMA           reduce using rule 71 (next_named_necessary_pred -> arg_name COLON unary_pred .)
    RP1             reduce using rule 71 (next_named_necessary_pred -> arg_name COLON unary_pred .)


state 295

    (72) next_named_opt_pred -> arg_name COLON ASSIGN . unary_pred
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 304
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 296

    (109) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 . S_COLON
    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 . R_ARROW unary_pred S_COLON

    S_COLON         shift and go to state 305
    R_ARROW         shift and go to state 306


state 297

    (113) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON .

    RP2             reduce using rule 113 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON .)
    ID              reduce using rule 113 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 S_COLON .)


state 298

    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 307
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 299

    (38) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON .

    RP2             reduce using rule 38 (decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON .)
    ID              reduce using rule 38 (decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON .)


state 300

    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 308
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 301

    (44) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON .

    RP2             reduce using rule 44 (decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON .)
    ID              reduce using rule 44 (decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 S_COLON .)


state 302

    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 309
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 303

    (50) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA . next_named_preds
    (67) next_named_preds -> . next_named_preds COMMA next_named_pred
    (68) next_named_preds -> . next_named_pred
    (69) next_named_pred -> . next_named_necessary_pred
    (70) next_named_pred -> . next_named_opt_pred
    (71) next_named_necessary_pred -> . arg_name COLON unary_pred
    (72) next_named_opt_pred -> . arg_name COLON ASSIGN unary_pred
    (73) arg_name -> . ID

    ID              shift and go to state 269

    next_named_preds               shift and go to state 310
    next_named_pred                shift and go to state 265
    next_named_necessary_pred      shift and go to state 266
    next_named_opt_pred            shift and go to state 267
    arg_name                       shift and go to state 268

state 304

    (72) next_named_opt_pred -> arg_name COLON ASSIGN unary_pred .

    COMMA           reduce using rule 72 (next_named_opt_pred -> arg_name COLON ASSIGN unary_pred .)
    RP1             reduce using rule 72 (next_named_opt_pred -> arg_name COLON ASSIGN unary_pred .)


state 305

    (109) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON .

    RP2             reduce using rule 109 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON .)
    ID              reduce using rule 109 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 S_COLON .)


state 306

    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW . unary_pred S_COLON
    (79) unary_pred -> . pred_name
    (80) unary_pred -> . unnamed_pred
    (85) pred_name -> . ID
    (81) unnamed_pred -> . pred_name LP3 args RP3
    (82) unnamed_pred -> . LP3 pred_expr RP3
    (83) unnamed_pred -> . TRAIT_OF LP1 var_expr RP1
    (84) unnamed_pred -> . NONE

    ID              shift and go to state 60
    LP3             shift and go to state 28
    TRAIT_OF        shift and go to state 29
    NONE            shift and go to state 31

    unary_pred                     shift and go to state 311
    pred_name                      shift and go to state 58
    unnamed_pred                   shift and go to state 59

state 307

    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 312


state 308

    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 313


state 309

    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 314


state 310

    (50) next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds .
    (67) next_named_preds -> next_named_preds . COMMA next_named_pred

    RP1             reduce using rule 50 (next_preds -> next_anonymous_necessary_preds COMMA next_anonymous_opt_preds COMMA STAR COMMA next_named_preds .)
    COMMA           shift and go to state 281


state 311

    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred . S_COLON

    S_COLON         shift and go to state 315


state 312

    (114) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 114 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 114 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 RP1 R_ARROW unary_pred S_COLON .)


state 313

    (39) decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 39 (decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 39 (decl_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)


state 314

    (45) decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 45 (decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 45 (decl_cls_fn_stmt -> fn_id LP3 type_var_args RP3 LP1 pred_args RP1 R_ARROW unary_pred S_COLON .)


state 315

    (110) decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON .

    RP2             reduce using rule 110 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON .)
    ID              reduce using rule 110 (decl_static_fn_stmt -> static_fn_id LP3 type_var_args RP3 LP1 next_preds RP1 R_ARROW unary_pred S_COLON .)

